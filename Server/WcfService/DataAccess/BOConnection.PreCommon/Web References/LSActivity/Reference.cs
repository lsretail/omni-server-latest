//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace LSOmni.DataAccess.BOConnection.PreCommon.LSActivity {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Activity_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Activity")]
    public partial class Activity : MySoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CancelActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmActivityV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmActivityV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmActivityV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmActivityV5OperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmGroupActivityV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmGroupActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActReservationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdditionalChargesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailabilityTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailabilityV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailabilityV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailabilityV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductChargesV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductChargesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceGroupAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGroupReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMemberDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PreSellActivityProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback SellMembershipV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SellMembershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAdditionalChargesV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAdditionalChargesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupHeaderStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReservationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadActivityLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadActivityProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadActivityResourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadActivityTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAdmissionEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadClientBookingsV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadClientBookingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadCustomerEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadMemberDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadMembershipEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadMembershipProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadMembershipSubscriptionChargesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadPromotionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadPurchasedAllowancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadReservationActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadResourceActivitiesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Activity() {
            this.Url = global::LSOmni.DataAccess.BOConnection.PreCommon.Properties.Settings.Default.LSOmni_DataAccess_BOConnection_PreCommon_LSActivity15_Activity;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CancelActivityCompletedEventHandler CancelActivityCompleted;
        
        /// <remarks/>
        public event CancelMembershipCompletedEventHandler CancelMembershipCompleted;
        
        /// <remarks/>
        public event CancelReservationCompletedEventHandler CancelReservationCompleted;
        
        /// <remarks/>
        public event CheckAccessCompletedEventHandler CheckAccessCompleted;
        
        /// <remarks/>
        public event ConfirmActivityV2CompletedEventHandler ConfirmActivityV2Completed;
        
        /// <remarks/>
        public event ConfirmActivityV3CompletedEventHandler ConfirmActivityV3Completed;
        
        /// <remarks/>
        public event ConfirmActivityV4CompletedEventHandler ConfirmActivityV4Completed;
        
        /// <remarks/>
        public event ConfirmActivityV5CompletedEventHandler ConfirmActivityV5Completed;
        
        /// <remarks/>
        public event ConfirmActivityCompletedEventHandler ConfirmActivityCompleted;
        
        /// <remarks/>
        public event ConfirmGroupActivityV2CompletedEventHandler ConfirmGroupActivityV2Completed;
        
        /// <remarks/>
        public event ConfirmGroupActivityCompletedEventHandler ConfirmGroupActivityCompleted;
        
        /// <remarks/>
        public event ConfirmReservationCompletedEventHandler ConfirmReservationCompleted;
        
        /// <remarks/>
        public event DeleteGroupActivityCompletedEventHandler DeleteGroupActivityCompleted;
        
        /// <remarks/>
        public event GetActReservationsCompletedEventHandler GetActReservationsCompleted;
        
        /// <remarks/>
        public event GetAdditionalChargesCompletedEventHandler GetAdditionalChargesCompleted;
        
        /// <remarks/>
        public event GetAttributesCompletedEventHandler GetAttributesCompleted;
        
        /// <remarks/>
        public event GetAvailabilityTokenCompletedEventHandler GetAvailabilityTokenCompleted;
        
        /// <remarks/>
        public event GetAvailabilityV2CompletedEventHandler GetAvailabilityV2Completed;
        
        /// <remarks/>
        public event GetAvailabilityV3CompletedEventHandler GetAvailabilityV3Completed;
        
        /// <remarks/>
        public event GetAvailabilityV4CompletedEventHandler GetAvailabilityV4Completed;
        
        /// <remarks/>
        public event GetAvailabilityCompletedEventHandler GetAvailabilityCompleted;
        
        /// <remarks/>
        public event GetProductChargesV2CompletedEventHandler GetProductChargesV2Completed;
        
        /// <remarks/>
        public event GetProductChargesCompletedEventHandler GetProductChargesCompleted;
        
        /// <remarks/>
        public event GetResourceAvailabilityCompletedEventHandler GetResourceAvailabilityCompleted;
        
        /// <remarks/>
        public event GetResourceGroupAvailabilityCompletedEventHandler GetResourceGroupAvailabilityCompleted;
        
        /// <remarks/>
        public event InsertGroupReservationCompletedEventHandler InsertGroupReservationCompleted;
        
        /// <remarks/>
        public event InsertMemberDepositCompletedEventHandler InsertMemberDepositCompleted;
        
        /// <remarks/>
        public event InsertReservationCompletedEventHandler InsertReservationCompleted;
        
        /// <remarks/>
        public event PreSellActivityProductCompletedEventHandler PreSellActivityProductCompleted;
        
        /// <remarks/>
        public event SellMembershipV2CompletedEventHandler SellMembershipV2Completed;
        
        /// <remarks/>
        public event SellMembershipCompletedEventHandler SellMembershipCompleted;
        
        /// <remarks/>
        public event SetAdditionalChargesV2CompletedEventHandler SetAdditionalChargesV2Completed;
        
        /// <remarks/>
        public event SetAdditionalChargesCompletedEventHandler SetAdditionalChargesCompleted;
        
        /// <remarks/>
        public event SetAttributeCompletedEventHandler SetAttributeCompleted;
        
        /// <remarks/>
        public event UpdateGroupHeaderStatusCompletedEventHandler UpdateGroupHeaderStatusCompleted;
        
        /// <remarks/>
        public event UpdateGroupReservationCompletedEventHandler UpdateGroupReservationCompleted;
        
        /// <remarks/>
        public event UpdateReservationCompletedEventHandler UpdateReservationCompleted;
        
        /// <remarks/>
        public event UploadActivityLocationsCompletedEventHandler UploadActivityLocationsCompleted;
        
        /// <remarks/>
        public event UploadActivityProductsCompletedEventHandler UploadActivityProductsCompleted;
        
        /// <remarks/>
        public event UploadActivityResourcesCompletedEventHandler UploadActivityResourcesCompleted;
        
        /// <remarks/>
        public event UploadActivityTypesCompletedEventHandler UploadActivityTypesCompleted;
        
        /// <remarks/>
        public event UploadAdmissionEntriesCompletedEventHandler UploadAdmissionEntriesCompleted;
        
        /// <remarks/>
        public event UploadClientBookingsV2CompletedEventHandler UploadClientBookingsV2Completed;
        
        /// <remarks/>
        public event UploadClientBookingsCompletedEventHandler UploadClientBookingsCompleted;
        
        /// <remarks/>
        public event UploadCustomerEntriesCompletedEventHandler UploadCustomerEntriesCompleted;
        
        /// <remarks/>
        public event UploadMemberDetailsCompletedEventHandler UploadMemberDetailsCompleted;
        
        /// <remarks/>
        public event UploadMembershipEntriesCompletedEventHandler UploadMembershipEntriesCompleted;
        
        /// <remarks/>
        public event UploadMembershipProductsCompletedEventHandler UploadMembershipProductsCompleted;
        
        /// <remarks/>
        public event UploadMembershipSubscriptionChargesCompletedEventHandler UploadMembershipSubscriptionChargesCompleted;
        
        /// <remarks/>
        public event UploadPromotionsCompletedEventHandler UploadPromotionsCompleted;
        
        /// <remarks/>
        public event UploadPurchasedAllowancesCompletedEventHandler UploadPurchasedAllowancesCompleted;
        
        /// <remarks/>
        public event UploadReservationActivitiesCompletedEventHandler UploadReservationActivitiesCompleted;
        
        /// <remarks/>
        public event UploadResourceActivitiesCompletedEventHandler UploadResourceActivitiesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:CancelActivity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="CancelActivity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CancelActivity(string activityNo, ref string errorString, ref string returnProductNo, ref decimal returnUnitPrice, ref decimal returnQty, ref decimal returnLineDiscount, ref decimal returnTotalAmount, ref string returnCurrency, ref string returnBookingRef) {
            object[] results = this.Invoke("CancelActivity", new object[] {
                        activityNo,
                        errorString,
                        returnProductNo,
                        returnUnitPrice,
                        returnQty,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef});
            errorString = ((string)(results[1]));
            returnProductNo = ((string)(results[2]));
            returnUnitPrice = ((decimal)(results[3]));
            returnQty = ((decimal)(results[4]));
            returnLineDiscount = ((decimal)(results[5]));
            returnTotalAmount = ((decimal)(results[6]));
            returnCurrency = ((string)(results[7]));
            returnBookingRef = ((string)(results[8]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelActivityAsync(string activityNo, string errorString, string returnProductNo, decimal returnUnitPrice, decimal returnQty, decimal returnLineDiscount, decimal returnTotalAmount, string returnCurrency, string returnBookingRef) {
            this.CancelActivityAsync(activityNo, errorString, returnProductNo, returnUnitPrice, returnQty, returnLineDiscount, returnTotalAmount, returnCurrency, returnBookingRef, null);
        }
        
        /// <remarks/>
        public void CancelActivityAsync(string activityNo, string errorString, string returnProductNo, decimal returnUnitPrice, decimal returnQty, decimal returnLineDiscount, decimal returnTotalAmount, string returnCurrency, string returnBookingRef, object userState) {
            if ((this.CancelActivityOperationCompleted == null)) {
                this.CancelActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelActivityOperationCompleted);
            }
            this.InvokeAsync("CancelActivity", new object[] {
                        activityNo,
                        errorString,
                        returnProductNo,
                        returnUnitPrice,
                        returnQty,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef}, this.CancelActivityOperationCompleted, userState);
        }
        
        private void OnCancelActivityOperationCompleted(object arg) {
            if ((this.CancelActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelActivityCompleted(this, new CancelActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:CancelMembership", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="CancelMembership_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CancelMembership(string clientNo, string membershipNo, string comment, ref string errorString) {
            object[] results = this.Invoke("CancelMembership", new object[] {
                        clientNo,
                        membershipNo,
                        comment,
                        errorString});
            errorString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelMembershipAsync(string clientNo, string membershipNo, string comment, string errorString) {
            this.CancelMembershipAsync(clientNo, membershipNo, comment, errorString, null);
        }
        
        /// <remarks/>
        public void CancelMembershipAsync(string clientNo, string membershipNo, string comment, string errorString, object userState) {
            if ((this.CancelMembershipOperationCompleted == null)) {
                this.CancelMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelMembershipOperationCompleted);
            }
            this.InvokeAsync("CancelMembership", new object[] {
                        clientNo,
                        membershipNo,
                        comment,
                        errorString}, this.CancelMembershipOperationCompleted, userState);
        }
        
        private void OnCancelMembershipOperationCompleted(object arg) {
            if ((this.CancelMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelMembershipCompleted(this, new CancelMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:CancelReservation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="CancelReservation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CancelReservation(string reservationNo, ref string errorString) {
            object[] results = this.Invoke("CancelReservation", new object[] {
                        reservationNo,
                        errorString});
            errorString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReservationAsync(string reservationNo, string errorString) {
            this.CancelReservationAsync(reservationNo, errorString, null);
        }
        
        /// <remarks/>
        public void CancelReservationAsync(string reservationNo, string errorString, object userState) {
            if ((this.CancelReservationOperationCompleted == null)) {
                this.CancelReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReservationOperationCompleted);
            }
            this.InvokeAsync("CancelReservation", new object[] {
                        reservationNo,
                        errorString}, this.CancelReservationOperationCompleted, userState);
        }
        
        private void OnCancelReservationOperationCompleted(object arg) {
            if ((this.CancelReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReservationCompleted(this, new CancelReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:CheckAccess", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="CheckAccess_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckAccess(string searchReference, string locationNo, string gateNo, bool registerAccessEntry, int checkType, ref string messageString) {
            object[] results = this.Invoke("CheckAccess", new object[] {
                        searchReference,
                        locationNo,
                        gateNo,
                        registerAccessEntry,
                        checkType,
                        messageString});
            messageString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAccessAsync(string searchReference, string locationNo, string gateNo, bool registerAccessEntry, int checkType, string messageString) {
            this.CheckAccessAsync(searchReference, locationNo, gateNo, registerAccessEntry, checkType, messageString, null);
        }
        
        /// <remarks/>
        public void CheckAccessAsync(string searchReference, string locationNo, string gateNo, bool registerAccessEntry, int checkType, string messageString, object userState) {
            if ((this.CheckAccessOperationCompleted == null)) {
                this.CheckAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAccessOperationCompleted);
            }
            this.InvokeAsync("CheckAccess", new object[] {
                        searchReference,
                        locationNo,
                        gateNo,
                        registerAccessEntry,
                        checkType,
                        messageString}, this.CheckAccessOperationCompleted, userState);
        }
        
        private void OnCheckAccessOperationCompleted(object arg) {
            if ((this.CheckAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAccessCompleted(this, new CheckAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:ConfirmActivityV2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="ConfirmActivityV2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmActivityV2(
                    string locationNo, 
                    string productNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    ref string returnActivityNo, 
                    ref string errorString, 
                    ref decimal returnUnitPrice, 
                    ref decimal returnLineDiscount, 
                    ref decimal returnTotalAmount, 
                    ref string returnCurrency, 
                    ref string returnBookingRef, 
                    ref string reservationNo) {
            object[] results = this.Invoke("ConfirmActivityV2", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        promoCode,
                        clientName,
                        email,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo});
            returnActivityNo = ((string)(results[1]));
            errorString = ((string)(results[2]));
            returnUnitPrice = ((decimal)(results[3]));
            returnLineDiscount = ((decimal)(results[4]));
            returnTotalAmount = ((decimal)(results[5]));
            returnCurrency = ((string)(results[6]));
            returnBookingRef = ((string)(results[7]));
            reservationNo = ((string)(results[8]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmActivityV2Async(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo) {
            this.ConfirmActivityV2Async(locationNo, productNo, activityDate, activityTime, clientNo, optionalResource, optionalComment, setQuantity, setNoOfPeople, paid, promoCode, clientName, email, returnActivityNo, errorString, returnUnitPrice, returnLineDiscount, returnTotalAmount, returnCurrency, returnBookingRef, reservationNo, null);
        }
        
        /// <remarks/>
        public void ConfirmActivityV2Async(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    object userState) {
            if ((this.ConfirmActivityV2OperationCompleted == null)) {
                this.ConfirmActivityV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmActivityV2OperationCompleted);
            }
            this.InvokeAsync("ConfirmActivityV2", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        promoCode,
                        clientName,
                        email,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo}, this.ConfirmActivityV2OperationCompleted, userState);
        }
        
        private void OnConfirmActivityV2OperationCompleted(object arg) {
            if ((this.ConfirmActivityV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmActivityV2Completed(this, new ConfirmActivityV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:ConfirmActivityV3", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="ConfirmActivityV3_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmActivityV3(
                    string locationNo, 
                    string productNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    ref string returnActivityNo, 
                    ref string errorString, 
                    ref decimal returnUnitPrice, 
                    ref decimal returnLineDiscount, 
                    ref decimal returnTotalAmount, 
                    ref string returnCurrency, 
                    ref string returnBookingRef, 
                    ref string reservationNo, 
                    ref string returnRetailItem) {
            object[] results = this.Invoke("ConfirmActivityV3", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        promoCode,
                        clientName,
                        email,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem});
            returnActivityNo = ((string)(results[1]));
            errorString = ((string)(results[2]));
            returnUnitPrice = ((decimal)(results[3]));
            returnLineDiscount = ((decimal)(results[4]));
            returnTotalAmount = ((decimal)(results[5]));
            returnCurrency = ((string)(results[6]));
            returnBookingRef = ((string)(results[7]));
            reservationNo = ((string)(results[8]));
            returnRetailItem = ((string)(results[9]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmActivityV3Async(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem) {
            this.ConfirmActivityV3Async(locationNo, productNo, activityDate, activityTime, clientNo, optionalResource, optionalComment, setQuantity, setNoOfPeople, paid, promoCode, clientName, email, returnActivityNo, errorString, returnUnitPrice, returnLineDiscount, returnTotalAmount, returnCurrency, returnBookingRef, reservationNo, returnRetailItem, null);
        }
        
        /// <remarks/>
        public void ConfirmActivityV3Async(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem, 
                    object userState) {
            if ((this.ConfirmActivityV3OperationCompleted == null)) {
                this.ConfirmActivityV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmActivityV3OperationCompleted);
            }
            this.InvokeAsync("ConfirmActivityV3", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        promoCode,
                        clientName,
                        email,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem}, this.ConfirmActivityV3OperationCompleted, userState);
        }
        
        private void OnConfirmActivityV3OperationCompleted(object arg) {
            if ((this.ConfirmActivityV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmActivityV3Completed(this, new ConfirmActivityV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:ConfirmActivityV4", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="ConfirmActivityV4_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmActivityV4(
                    string locationNo, 
                    string productNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    ref string returnActivityNo, 
                    ref string errorString, 
                    ref decimal returnUnitPrice, 
                    ref decimal returnLineDiscount, 
                    ref decimal returnTotalAmount, 
                    ref string returnCurrency, 
                    ref string returnBookingRef, 
                    ref string reservationNo, 
                    ref string returnRetailItem, 
                    string customerAccountNo) {
            object[] results = this.Invoke("ConfirmActivityV4", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        promoCode,
                        clientName,
                        email,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem,
                        customerAccountNo});
            returnActivityNo = ((string)(results[1]));
            errorString = ((string)(results[2]));
            returnUnitPrice = ((decimal)(results[3]));
            returnLineDiscount = ((decimal)(results[4]));
            returnTotalAmount = ((decimal)(results[5]));
            returnCurrency = ((string)(results[6]));
            returnBookingRef = ((string)(results[7]));
            reservationNo = ((string)(results[8]));
            returnRetailItem = ((string)(results[9]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmActivityV4Async(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem, 
                    string customerAccountNo) {
            this.ConfirmActivityV4Async(locationNo, productNo, activityDate, activityTime, clientNo, optionalResource, optionalComment, setQuantity, setNoOfPeople, paid, promoCode, clientName, email, returnActivityNo, errorString, returnUnitPrice, returnLineDiscount, returnTotalAmount, returnCurrency, returnBookingRef, reservationNo, returnRetailItem, customerAccountNo, null);
        }
        
        /// <remarks/>
        public void ConfirmActivityV4Async(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem, 
                    string customerAccountNo, 
                    object userState) {
            if ((this.ConfirmActivityV4OperationCompleted == null)) {
                this.ConfirmActivityV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmActivityV4OperationCompleted);
            }
            this.InvokeAsync("ConfirmActivityV4", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        promoCode,
                        clientName,
                        email,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem,
                        customerAccountNo}, this.ConfirmActivityV4OperationCompleted, userState);
        }
        
        private void OnConfirmActivityV4OperationCompleted(object arg) {
            if ((this.ConfirmActivityV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmActivityV4Completed(this, new ConfirmActivityV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:ConfirmActivityV5", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="ConfirmActivityV5_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmActivityV5(
                    string locationNo, 
                    string productNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    ref string returnActivityNo, 
                    ref string errorString, 
                    ref decimal returnUnitPrice, 
                    ref decimal returnLineDiscount, 
                    ref decimal returnTotalAmount, 
                    ref string returnCurrency, 
                    ref string returnBookingRef, 
                    ref string reservationNo, 
                    ref string returnRetailItem, 
                    string customerAccountNo, 
                    string token) {
            object[] results = this.Invoke("ConfirmActivityV5", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        promoCode,
                        clientName,
                        email,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem,
                        customerAccountNo,
                        token});
            returnActivityNo = ((string)(results[1]));
            errorString = ((string)(results[2]));
            returnUnitPrice = ((decimal)(results[3]));
            returnLineDiscount = ((decimal)(results[4]));
            returnTotalAmount = ((decimal)(results[5]));
            returnCurrency = ((string)(results[6]));
            returnBookingRef = ((string)(results[7]));
            reservationNo = ((string)(results[8]));
            returnRetailItem = ((string)(results[9]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmActivityV5Async(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem, 
                    string customerAccountNo, 
                    string token) {
            this.ConfirmActivityV5Async(locationNo, productNo, activityDate, activityTime, clientNo, optionalResource, optionalComment, setQuantity, setNoOfPeople, paid, promoCode, clientName, email, returnActivityNo, errorString, returnUnitPrice, returnLineDiscount, returnTotalAmount, returnCurrency, returnBookingRef, reservationNo, returnRetailItem, customerAccountNo, token, null);
        }
        
        /// <remarks/>
        public void ConfirmActivityV5Async(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem, 
                    string customerAccountNo, 
                    string token, 
                    object userState) {
            if ((this.ConfirmActivityV5OperationCompleted == null)) {
                this.ConfirmActivityV5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmActivityV5OperationCompleted);
            }
            this.InvokeAsync("ConfirmActivityV5", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        promoCode,
                        clientName,
                        email,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem,
                        customerAccountNo,
                        token}, this.ConfirmActivityV5OperationCompleted, userState);
        }
        
        private void OnConfirmActivityV5OperationCompleted(object arg) {
            if ((this.ConfirmActivityV5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmActivityV5Completed(this, new ConfirmActivityV5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:ConfirmActivity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="ConfirmActivity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmActivity(
                    string locationNo, 
                    string productNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    ref string returnActivityNo, 
                    ref string errorString, 
                    ref decimal returnUnitPrice, 
                    ref decimal returnLineDiscount, 
                    ref decimal returnTotalAmount, 
                    ref string returnCurrency, 
                    ref string returnBookingRef) {
            object[] results = this.Invoke("ConfirmActivity", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef});
            returnActivityNo = ((string)(results[1]));
            errorString = ((string)(results[2]));
            returnUnitPrice = ((decimal)(results[3]));
            returnLineDiscount = ((decimal)(results[4]));
            returnTotalAmount = ((decimal)(results[5]));
            returnCurrency = ((string)(results[6]));
            returnBookingRef = ((string)(results[7]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmActivityAsync(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef) {
            this.ConfirmActivityAsync(locationNo, productNo, activityDate, activityTime, clientNo, optionalResource, optionalComment, setQuantity, setNoOfPeople, paid, returnActivityNo, errorString, returnUnitPrice, returnLineDiscount, returnTotalAmount, returnCurrency, returnBookingRef, null);
        }
        
        /// <remarks/>
        public void ConfirmActivityAsync(
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    object userState) {
            if ((this.ConfirmActivityOperationCompleted == null)) {
                this.ConfirmActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmActivityOperationCompleted);
            }
            this.InvokeAsync("ConfirmActivity", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef}, this.ConfirmActivityOperationCompleted, userState);
        }
        
        private void OnConfirmActivityOperationCompleted(object arg) {
            if ((this.ConfirmActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmActivityCompleted(this, new ConfirmActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:ConfirmGroupActivityV2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="ConfirmGroupActivityV2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmGroupActivityV2(
                    string groupNo, 
                    string locationNo, 
                    string productNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string setGroupReservation, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    decimal unitPrice, 
                    ref int returnGroupLineNo, 
                    ref string returnActivityNo, 
                    ref string errorString, 
                    ref decimal returnUnitPrice, 
                    ref decimal returnLineDiscount, 
                    ref decimal returnTotalAmount, 
                    ref string returnCurrency, 
                    ref string returnBookingRef, 
                    ref string reservationNo, 
                    ref string returnRetailItem, 
                    string customerAccountNo, 
                    string token, 
                    bool setGroupHeaderStatus) {
            object[] results = this.Invoke("ConfirmGroupActivityV2", new object[] {
                        groupNo,
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        setGroupReservation,
                        promoCode,
                        clientName,
                        email,
                        unitPrice,
                        returnGroupLineNo,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem,
                        customerAccountNo,
                        token,
                        setGroupHeaderStatus});
            returnGroupLineNo = ((int)(results[1]));
            returnActivityNo = ((string)(results[2]));
            errorString = ((string)(results[3]));
            returnUnitPrice = ((decimal)(results[4]));
            returnLineDiscount = ((decimal)(results[5]));
            returnTotalAmount = ((decimal)(results[6]));
            returnCurrency = ((string)(results[7]));
            returnBookingRef = ((string)(results[8]));
            reservationNo = ((string)(results[9]));
            returnRetailItem = ((string)(results[10]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmGroupActivityV2Async(
                    string groupNo, 
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string setGroupReservation, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    decimal unitPrice, 
                    int returnGroupLineNo, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem, 
                    string customerAccountNo, 
                    string token, 
                    bool setGroupHeaderStatus) {
            this.ConfirmGroupActivityV2Async(groupNo, locationNo, productNo, activityDate, activityTime, clientNo, optionalResource, optionalComment, setQuantity, setNoOfPeople, paid, setGroupReservation, promoCode, clientName, email, unitPrice, returnGroupLineNo, returnActivityNo, errorString, returnUnitPrice, returnLineDiscount, returnTotalAmount, returnCurrency, returnBookingRef, reservationNo, returnRetailItem, customerAccountNo, token, setGroupHeaderStatus, null);
        }
        
        /// <remarks/>
        public void ConfirmGroupActivityV2Async(
                    string groupNo, 
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string setGroupReservation, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    decimal unitPrice, 
                    int returnGroupLineNo, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem, 
                    string customerAccountNo, 
                    string token, 
                    bool setGroupHeaderStatus, 
                    object userState) {
            if ((this.ConfirmGroupActivityV2OperationCompleted == null)) {
                this.ConfirmGroupActivityV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmGroupActivityV2OperationCompleted);
            }
            this.InvokeAsync("ConfirmGroupActivityV2", new object[] {
                        groupNo,
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        setGroupReservation,
                        promoCode,
                        clientName,
                        email,
                        unitPrice,
                        returnGroupLineNo,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem,
                        customerAccountNo,
                        token,
                        setGroupHeaderStatus}, this.ConfirmGroupActivityV2OperationCompleted, userState);
        }
        
        private void OnConfirmGroupActivityV2OperationCompleted(object arg) {
            if ((this.ConfirmGroupActivityV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmGroupActivityV2Completed(this, new ConfirmGroupActivityV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:ConfirmGroupActivity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="ConfirmGroupActivity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmGroupActivity(
                    string groupNo, 
                    string locationNo, 
                    string productNo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string setGroupReservation, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    decimal unitPrice, 
                    ref int returnGroupLineNo, 
                    ref string returnActivityNo, 
                    ref string errorString, 
                    ref decimal returnUnitPrice, 
                    ref decimal returnLineDiscount, 
                    ref decimal returnTotalAmount, 
                    ref string returnCurrency, 
                    ref string returnBookingRef, 
                    ref string reservationNo, 
                    ref string returnRetailItem, 
                    string customerAccountNo, 
                    string token) {
            object[] results = this.Invoke("ConfirmGroupActivity", new object[] {
                        groupNo,
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        setGroupReservation,
                        promoCode,
                        clientName,
                        email,
                        unitPrice,
                        returnGroupLineNo,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem,
                        customerAccountNo,
                        token});
            returnGroupLineNo = ((int)(results[1]));
            returnActivityNo = ((string)(results[2]));
            errorString = ((string)(results[3]));
            returnUnitPrice = ((decimal)(results[4]));
            returnLineDiscount = ((decimal)(results[5]));
            returnTotalAmount = ((decimal)(results[6]));
            returnCurrency = ((string)(results[7]));
            returnBookingRef = ((string)(results[8]));
            reservationNo = ((string)(results[9]));
            returnRetailItem = ((string)(results[10]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmGroupActivityAsync(
                    string groupNo, 
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string setGroupReservation, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    decimal unitPrice, 
                    int returnGroupLineNo, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem, 
                    string customerAccountNo, 
                    string token) {
            this.ConfirmGroupActivityAsync(groupNo, locationNo, productNo, activityDate, activityTime, clientNo, optionalResource, optionalComment, setQuantity, setNoOfPeople, paid, setGroupReservation, promoCode, clientName, email, unitPrice, returnGroupLineNo, returnActivityNo, errorString, returnUnitPrice, returnLineDiscount, returnTotalAmount, returnCurrency, returnBookingRef, reservationNo, returnRetailItem, customerAccountNo, token, null);
        }
        
        /// <remarks/>
        public void ConfirmGroupActivityAsync(
                    string groupNo, 
                    string locationNo, 
                    string productNo, 
                    System.DateTime activityDate, 
                    System.DateTime activityTime, 
                    string clientNo, 
                    string optionalResource, 
                    string optionalComment, 
                    decimal setQuantity, 
                    decimal setNoOfPeople, 
                    bool paid, 
                    string setGroupReservation, 
                    string promoCode, 
                    string clientName, 
                    string email, 
                    decimal unitPrice, 
                    int returnGroupLineNo, 
                    string returnActivityNo, 
                    string errorString, 
                    decimal returnUnitPrice, 
                    decimal returnLineDiscount, 
                    decimal returnTotalAmount, 
                    string returnCurrency, 
                    string returnBookingRef, 
                    string reservationNo, 
                    string returnRetailItem, 
                    string customerAccountNo, 
                    string token, 
                    object userState) {
            if ((this.ConfirmGroupActivityOperationCompleted == null)) {
                this.ConfirmGroupActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmGroupActivityOperationCompleted);
            }
            this.InvokeAsync("ConfirmGroupActivity", new object[] {
                        groupNo,
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        clientNo,
                        optionalResource,
                        optionalComment,
                        setQuantity,
                        setNoOfPeople,
                        paid,
                        setGroupReservation,
                        promoCode,
                        clientName,
                        email,
                        unitPrice,
                        returnGroupLineNo,
                        returnActivityNo,
                        errorString,
                        returnUnitPrice,
                        returnLineDiscount,
                        returnTotalAmount,
                        returnCurrency,
                        returnBookingRef,
                        reservationNo,
                        returnRetailItem,
                        customerAccountNo,
                        token}, this.ConfirmGroupActivityOperationCompleted, userState);
        }
        
        private void OnConfirmGroupActivityOperationCompleted(object arg) {
            if ((this.ConfirmGroupActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmGroupActivityCompleted(this, new ConfirmGroupActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:ConfirmReservation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="ConfirmReservation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ConfirmReservation(string reservationNo, ref string errorString) {
            object[] results = this.Invoke("ConfirmReservation", new object[] {
                        reservationNo,
                        errorString});
            errorString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmReservationAsync(string reservationNo, string errorString) {
            this.ConfirmReservationAsync(reservationNo, errorString, null);
        }
        
        /// <remarks/>
        public void ConfirmReservationAsync(string reservationNo, string errorString, object userState) {
            if ((this.ConfirmReservationOperationCompleted == null)) {
                this.ConfirmReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmReservationOperationCompleted);
            }
            this.InvokeAsync("ConfirmReservation", new object[] {
                        reservationNo,
                        errorString}, this.ConfirmReservationOperationCompleted, userState);
        }
        
        private void OnConfirmReservationOperationCompleted(object arg) {
            if ((this.ConfirmReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmReservationCompleted(this, new ConfirmReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:DeleteGroupActivity", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="DeleteGroupActivity_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteGroupActivity(string groupNo_p, int groupLineNo_p, ref string errorString) {
            object[] results = this.Invoke("DeleteGroupActivity", new object[] {
                        groupNo_p,
                        groupLineNo_p,
                        errorString});
            errorString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGroupActivityAsync(string groupNo_p, int groupLineNo_p, string errorString) {
            this.DeleteGroupActivityAsync(groupNo_p, groupLineNo_p, errorString, null);
        }
        
        /// <remarks/>
        public void DeleteGroupActivityAsync(string groupNo_p, int groupLineNo_p, string errorString, object userState) {
            if ((this.DeleteGroupActivityOperationCompleted == null)) {
                this.DeleteGroupActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupActivityOperationCompleted);
            }
            this.InvokeAsync("DeleteGroupActivity", new object[] {
                        groupNo_p,
                        groupLineNo_p,
                        errorString}, this.DeleteGroupActivityOperationCompleted, userState);
        }
        
        private void OnDeleteGroupActivityOperationCompleted(object arg) {
            if ((this.DeleteGroupActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupActivityCompleted(this, new DeleteGroupActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetActReservations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetActReservations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetActReservations(string reservationNo, string locationNo, string reservationType, string status, System.DateTime fromDateTime, ref ActivityUploadResHeaders resHeadersRespond) {
            object[] results = this.Invoke("GetActReservations", new object[] {
                        reservationNo,
                        locationNo,
                        reservationType,
                        status,
                        fromDateTime,
                        resHeadersRespond});
            resHeadersRespond = ((ActivityUploadResHeaders)(results[0]));
        }
        
        /// <remarks/>
        public void GetActReservationsAsync(string reservationNo, string locationNo, string reservationType, string status, System.DateTime fromDateTime, ActivityUploadResHeaders resHeadersRespond) {
            this.GetActReservationsAsync(reservationNo, locationNo, reservationType, status, fromDateTime, resHeadersRespond, null);
        }
        
        /// <remarks/>
        public void GetActReservationsAsync(string reservationNo, string locationNo, string reservationType, string status, System.DateTime fromDateTime, ActivityUploadResHeaders resHeadersRespond, object userState) {
            if ((this.GetActReservationsOperationCompleted == null)) {
                this.GetActReservationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActReservationsOperationCompleted);
            }
            this.InvokeAsync("GetActReservations", new object[] {
                        reservationNo,
                        locationNo,
                        reservationType,
                        status,
                        fromDateTime,
                        resHeadersRespond}, this.GetActReservationsOperationCompleted, userState);
        }
        
        private void OnGetActReservationsOperationCompleted(object arg) {
            if ((this.GetActReservationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActReservationsCompleted(this, new GetActReservationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetAdditionalCharges", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetAdditionalCharges_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetAdditionalCharges(string activityNo, ref ActivityChargeRespond activityChargeRespond) {
            object[] results = this.Invoke("GetAdditionalCharges", new object[] {
                        activityNo,
                        activityChargeRespond});
            activityChargeRespond = ((ActivityChargeRespond)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdditionalChargesAsync(string activityNo, ActivityChargeRespond activityChargeRespond) {
            this.GetAdditionalChargesAsync(activityNo, activityChargeRespond, null);
        }
        
        /// <remarks/>
        public void GetAdditionalChargesAsync(string activityNo, ActivityChargeRespond activityChargeRespond, object userState) {
            if ((this.GetAdditionalChargesOperationCompleted == null)) {
                this.GetAdditionalChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdditionalChargesOperationCompleted);
            }
            this.InvokeAsync("GetAdditionalCharges", new object[] {
                        activityNo,
                        activityChargeRespond}, this.GetAdditionalChargesOperationCompleted, userState);
        }
        
        private void OnGetAdditionalChargesOperationCompleted(object arg) {
            if ((this.GetAdditionalChargesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdditionalChargesCompleted(this, new GetAdditionalChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetAttributes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetAttributes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetAttributes(int type, string linkNo, ref ActivityAttributeRespond activityAttributeRespond) {
            object[] results = this.Invoke("GetAttributes", new object[] {
                        type,
                        linkNo,
                        activityAttributeRespond});
            activityAttributeRespond = ((ActivityAttributeRespond)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttributesAsync(int type, string linkNo, ActivityAttributeRespond activityAttributeRespond) {
            this.GetAttributesAsync(type, linkNo, activityAttributeRespond, null);
        }
        
        /// <remarks/>
        public void GetAttributesAsync(int type, string linkNo, ActivityAttributeRespond activityAttributeRespond, object userState) {
            if ((this.GetAttributesOperationCompleted == null)) {
                this.GetAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttributesOperationCompleted);
            }
            this.InvokeAsync("GetAttributes", new object[] {
                        type,
                        linkNo,
                        activityAttributeRespond}, this.GetAttributesOperationCompleted, userState);
        }
        
        private void OnGetAttributesOperationCompleted(object arg) {
            if ((this.GetAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttributesCompleted(this, new GetAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetAvailabilityToken", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetAvailabilityToken_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool GetAvailabilityToken(string locationNo, string productNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime activityTime, string optionalResource, decimal setQuantity, ref string returnTokenNo, ref string errorString) {
            object[] results = this.Invoke("GetAvailabilityToken", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        optionalResource,
                        setQuantity,
                        returnTokenNo,
                        errorString});
            returnTokenNo = ((string)(results[1]));
            errorString = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailabilityTokenAsync(string locationNo, string productNo, System.DateTime activityDate, System.DateTime activityTime, string optionalResource, decimal setQuantity, string returnTokenNo, string errorString) {
            this.GetAvailabilityTokenAsync(locationNo, productNo, activityDate, activityTime, optionalResource, setQuantity, returnTokenNo, errorString, null);
        }
        
        /// <remarks/>
        public void GetAvailabilityTokenAsync(string locationNo, string productNo, System.DateTime activityDate, System.DateTime activityTime, string optionalResource, decimal setQuantity, string returnTokenNo, string errorString, object userState) {
            if ((this.GetAvailabilityTokenOperationCompleted == null)) {
                this.GetAvailabilityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailabilityTokenOperationCompleted);
            }
            this.InvokeAsync("GetAvailabilityToken", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        activityTime,
                        optionalResource,
                        setQuantity,
                        returnTokenNo,
                        errorString}, this.GetAvailabilityTokenOperationCompleted, userState);
        }
        
        private void OnGetAvailabilityTokenOperationCompleted(object arg) {
            if ((this.GetAvailabilityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailabilityTokenCompleted(this, new GetAvailabilityTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetAvailabilityV2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetAvailabilityV2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool GetAvailabilityV2(string locationNo, string productNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, string clientNo, string optionalResource, string promoCode, string activityNo, ref string errorString, ref ActivityAvailabilityResponse getAvailabilityResponse) {
            object[] results = this.Invoke("GetAvailabilityV2", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        clientNo,
                        optionalResource,
                        promoCode,
                        activityNo,
                        errorString,
                        getAvailabilityResponse});
            errorString = ((string)(results[1]));
            getAvailabilityResponse = ((ActivityAvailabilityResponse)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailabilityV2Async(string locationNo, string productNo, System.DateTime activityDate, string clientNo, string optionalResource, string promoCode, string activityNo, string errorString, ActivityAvailabilityResponse getAvailabilityResponse) {
            this.GetAvailabilityV2Async(locationNo, productNo, activityDate, clientNo, optionalResource, promoCode, activityNo, errorString, getAvailabilityResponse, null);
        }
        
        /// <remarks/>
        public void GetAvailabilityV2Async(string locationNo, string productNo, System.DateTime activityDate, string clientNo, string optionalResource, string promoCode, string activityNo, string errorString, ActivityAvailabilityResponse getAvailabilityResponse, object userState) {
            if ((this.GetAvailabilityV2OperationCompleted == null)) {
                this.GetAvailabilityV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailabilityV2OperationCompleted);
            }
            this.InvokeAsync("GetAvailabilityV2", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        clientNo,
                        optionalResource,
                        promoCode,
                        activityNo,
                        errorString,
                        getAvailabilityResponse}, this.GetAvailabilityV2OperationCompleted, userState);
        }
        
        private void OnGetAvailabilityV2OperationCompleted(object arg) {
            if ((this.GetAvailabilityV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailabilityV2Completed(this, new GetAvailabilityV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetAvailabilityV3", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetAvailabilityV3_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool GetAvailabilityV3(string locationNo, string productNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, string clientNo, string optionalResource, string promoCode, string activityNo, int noOfPersons, ref string errorString, ref ActivityAvailabilityResponse getAvailabilityResponse) {
            object[] results = this.Invoke("GetAvailabilityV3", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        clientNo,
                        optionalResource,
                        promoCode,
                        activityNo,
                        noOfPersons,
                        errorString,
                        getAvailabilityResponse});
            errorString = ((string)(results[1]));
            getAvailabilityResponse = ((ActivityAvailabilityResponse)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailabilityV3Async(string locationNo, string productNo, System.DateTime activityDate, string clientNo, string optionalResource, string promoCode, string activityNo, int noOfPersons, string errorString, ActivityAvailabilityResponse getAvailabilityResponse) {
            this.GetAvailabilityV3Async(locationNo, productNo, activityDate, clientNo, optionalResource, promoCode, activityNo, noOfPersons, errorString, getAvailabilityResponse, null);
        }
        
        /// <remarks/>
        public void GetAvailabilityV3Async(string locationNo, string productNo, System.DateTime activityDate, string clientNo, string optionalResource, string promoCode, string activityNo, int noOfPersons, string errorString, ActivityAvailabilityResponse getAvailabilityResponse, object userState) {
            if ((this.GetAvailabilityV3OperationCompleted == null)) {
                this.GetAvailabilityV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailabilityV3OperationCompleted);
            }
            this.InvokeAsync("GetAvailabilityV3", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        clientNo,
                        optionalResource,
                        promoCode,
                        activityNo,
                        noOfPersons,
                        errorString,
                        getAvailabilityResponse}, this.GetAvailabilityV3OperationCompleted, userState);
        }
        
        private void OnGetAvailabilityV3OperationCompleted(object arg) {
            if ((this.GetAvailabilityV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailabilityV3Completed(this, new GetAvailabilityV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetAvailabilityV4", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetAvailabilityV4_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool GetAvailabilityV4(string locationNo, string productNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, string clientNo, string optionalResource, string promoCode, string activityNo, int noOfPersons, string customerAccountNo, ref string errorString, ref ActivityAvailabilityResponse getAvailabilityResponse) {
            object[] results = this.Invoke("GetAvailabilityV4", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        clientNo,
                        optionalResource,
                        promoCode,
                        activityNo,
                        noOfPersons,
                        customerAccountNo,
                        errorString,
                        getAvailabilityResponse});
            errorString = ((string)(results[1]));
            getAvailabilityResponse = ((ActivityAvailabilityResponse)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailabilityV4Async(string locationNo, string productNo, System.DateTime activityDate, string clientNo, string optionalResource, string promoCode, string activityNo, int noOfPersons, string customerAccountNo, string errorString, ActivityAvailabilityResponse getAvailabilityResponse) {
            this.GetAvailabilityV4Async(locationNo, productNo, activityDate, clientNo, optionalResource, promoCode, activityNo, noOfPersons, customerAccountNo, errorString, getAvailabilityResponse, null);
        }
        
        /// <remarks/>
        public void GetAvailabilityV4Async(string locationNo, string productNo, System.DateTime activityDate, string clientNo, string optionalResource, string promoCode, string activityNo, int noOfPersons, string customerAccountNo, string errorString, ActivityAvailabilityResponse getAvailabilityResponse, object userState) {
            if ((this.GetAvailabilityV4OperationCompleted == null)) {
                this.GetAvailabilityV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailabilityV4OperationCompleted);
            }
            this.InvokeAsync("GetAvailabilityV4", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        clientNo,
                        optionalResource,
                        promoCode,
                        activityNo,
                        noOfPersons,
                        customerAccountNo,
                        errorString,
                        getAvailabilityResponse}, this.GetAvailabilityV4OperationCompleted, userState);
        }
        
        private void OnGetAvailabilityV4OperationCompleted(object arg) {
            if ((this.GetAvailabilityV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailabilityV4Completed(this, new GetAvailabilityV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetAvailability", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetAvailability_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool GetAvailability(string locationNo, string productNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, string clientNo, string optionalResource, string activityNo, ref string errorString, ref ActivityAvailabilityResponse getAvailabilityResponse) {
            object[] results = this.Invoke("GetAvailability", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        clientNo,
                        optionalResource,
                        activityNo,
                        errorString,
                        getAvailabilityResponse});
            errorString = ((string)(results[1]));
            getAvailabilityResponse = ((ActivityAvailabilityResponse)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailabilityAsync(string locationNo, string productNo, System.DateTime activityDate, string clientNo, string optionalResource, string activityNo, string errorString, ActivityAvailabilityResponse getAvailabilityResponse) {
            this.GetAvailabilityAsync(locationNo, productNo, activityDate, clientNo, optionalResource, activityNo, errorString, getAvailabilityResponse, null);
        }
        
        /// <remarks/>
        public void GetAvailabilityAsync(string locationNo, string productNo, System.DateTime activityDate, string clientNo, string optionalResource, string activityNo, string errorString, ActivityAvailabilityResponse getAvailabilityResponse, object userState) {
            if ((this.GetAvailabilityOperationCompleted == null)) {
                this.GetAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GetAvailability", new object[] {
                        locationNo,
                        productNo,
                        activityDate,
                        clientNo,
                        optionalResource,
                        activityNo,
                        errorString,
                        getAvailabilityResponse}, this.GetAvailabilityOperationCompleted, userState);
        }
        
        private void OnGetAvailabilityOperationCompleted(object arg) {
            if ((this.GetAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailabilityCompleted(this, new GetAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetProductChargesV2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetProductChargesV2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetProductChargesV2(string productNo, string locationNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBooking, ref ActivityChargeRespond activityChargeRespond) {
            object[] results = this.Invoke("GetProductChargesV2", new object[] {
                        productNo,
                        locationNo,
                        dateOfBooking,
                        activityChargeRespond});
            activityChargeRespond = ((ActivityChargeRespond)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductChargesV2Async(string productNo, string locationNo, System.DateTime dateOfBooking, ActivityChargeRespond activityChargeRespond) {
            this.GetProductChargesV2Async(productNo, locationNo, dateOfBooking, activityChargeRespond, null);
        }
        
        /// <remarks/>
        public void GetProductChargesV2Async(string productNo, string locationNo, System.DateTime dateOfBooking, ActivityChargeRespond activityChargeRespond, object userState) {
            if ((this.GetProductChargesV2OperationCompleted == null)) {
                this.GetProductChargesV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductChargesV2OperationCompleted);
            }
            this.InvokeAsync("GetProductChargesV2", new object[] {
                        productNo,
                        locationNo,
                        dateOfBooking,
                        activityChargeRespond}, this.GetProductChargesV2OperationCompleted, userState);
        }
        
        private void OnGetProductChargesV2OperationCompleted(object arg) {
            if ((this.GetProductChargesV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductChargesV2Completed(this, new GetProductChargesV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetProductCharges", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetProductCharges_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetProductCharges(string productNo, string locationNo, ref ActivityChargeRespond activityChargeRespond) {
            object[] results = this.Invoke("GetProductCharges", new object[] {
                        productNo,
                        locationNo,
                        activityChargeRespond});
            activityChargeRespond = ((ActivityChargeRespond)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductChargesAsync(string productNo, string locationNo, ActivityChargeRespond activityChargeRespond) {
            this.GetProductChargesAsync(productNo, locationNo, activityChargeRespond, null);
        }
        
        /// <remarks/>
        public void GetProductChargesAsync(string productNo, string locationNo, ActivityChargeRespond activityChargeRespond, object userState) {
            if ((this.GetProductChargesOperationCompleted == null)) {
                this.GetProductChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductChargesOperationCompleted);
            }
            this.InvokeAsync("GetProductCharges", new object[] {
                        productNo,
                        locationNo,
                        activityChargeRespond}, this.GetProductChargesOperationCompleted, userState);
        }
        
        private void OnGetProductChargesOperationCompleted(object arg) {
            if ((this.GetProductChargesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductChargesCompleted(this, new GetProductChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetResourceAvailability", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetResourceAvailability_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool GetResourceAvailability(string locationNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, string resourceNo, string intervalType, int noOfDays, ref string errorString, ref ActivityAvailabilityResponse getAvailabilityResponse) {
            object[] results = this.Invoke("GetResourceAvailability", new object[] {
                        locationNo,
                        activityDate,
                        resourceNo,
                        intervalType,
                        noOfDays,
                        errorString,
                        getAvailabilityResponse});
            errorString = ((string)(results[1]));
            getAvailabilityResponse = ((ActivityAvailabilityResponse)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceAvailabilityAsync(string locationNo, System.DateTime activityDate, string resourceNo, string intervalType, int noOfDays, string errorString, ActivityAvailabilityResponse getAvailabilityResponse) {
            this.GetResourceAvailabilityAsync(locationNo, activityDate, resourceNo, intervalType, noOfDays, errorString, getAvailabilityResponse, null);
        }
        
        /// <remarks/>
        public void GetResourceAvailabilityAsync(string locationNo, System.DateTime activityDate, string resourceNo, string intervalType, int noOfDays, string errorString, ActivityAvailabilityResponse getAvailabilityResponse, object userState) {
            if ((this.GetResourceAvailabilityOperationCompleted == null)) {
                this.GetResourceAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GetResourceAvailability", new object[] {
                        locationNo,
                        activityDate,
                        resourceNo,
                        intervalType,
                        noOfDays,
                        errorString,
                        getAvailabilityResponse}, this.GetResourceAvailabilityOperationCompleted, userState);
        }
        
        private void OnGetResourceAvailabilityOperationCompleted(object arg) {
            if ((this.GetResourceAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceAvailabilityCompleted(this, new GetResourceAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:GetResourceGroupAvailability", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="GetResourceGroupAvailability_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool GetResourceGroupAvailability(string locationNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime activityDate, string groupNo, string intervalType, int noOfDays, ref string errorString, ref ActivityAvailabilityResponse getAvailabilityResponse) {
            object[] results = this.Invoke("GetResourceGroupAvailability", new object[] {
                        locationNo,
                        activityDate,
                        groupNo,
                        intervalType,
                        noOfDays,
                        errorString,
                        getAvailabilityResponse});
            errorString = ((string)(results[1]));
            getAvailabilityResponse = ((ActivityAvailabilityResponse)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceGroupAvailabilityAsync(string locationNo, System.DateTime activityDate, string groupNo, string intervalType, int noOfDays, string errorString, ActivityAvailabilityResponse getAvailabilityResponse) {
            this.GetResourceGroupAvailabilityAsync(locationNo, activityDate, groupNo, intervalType, noOfDays, errorString, getAvailabilityResponse, null);
        }
        
        /// <remarks/>
        public void GetResourceGroupAvailabilityAsync(string locationNo, System.DateTime activityDate, string groupNo, string intervalType, int noOfDays, string errorString, ActivityAvailabilityResponse getAvailabilityResponse, object userState) {
            if ((this.GetResourceGroupAvailabilityOperationCompleted == null)) {
                this.GetResourceGroupAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceGroupAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GetResourceGroupAvailability", new object[] {
                        locationNo,
                        activityDate,
                        groupNo,
                        intervalType,
                        noOfDays,
                        errorString,
                        getAvailabilityResponse}, this.GetResourceGroupAvailabilityOperationCompleted, userState);
        }
        
        private void OnGetResourceGroupAvailabilityOperationCompleted(object arg) {
            if ((this.GetResourceGroupAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceGroupAvailabilityCompleted(this, new GetResourceGroupAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:InsertGroupReservation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="InsertGroupReservation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertGroupReservation(
                    ref string setReservationNo, 
                    string setReservationType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime setResDateFrom, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime setResTimeFrom, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime setResDateTo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    int setNoOfPersons, 
                    ref string errorString) {
            object[] results = this.Invoke("InsertGroupReservation", new object[] {
                        setReservationNo,
                        setReservationType,
                        setResDateFrom,
                        setResTimeFrom,
                        setResDateTo,
                        setResTimeTo,
                        setCustomerAccount,
                        setDescription,
                        setComment,
                        setReference,
                        setContactNo,
                        setClientName,
                        setEmail,
                        setLocation,
                        setSalesPerson,
                        setInternalstatus,
                        setStatus,
                        setNoOfPersons,
                        errorString});
            setReservationNo = ((string)(results[1]));
            errorString = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGroupReservationAsync(
                    string setReservationNo, 
                    string setReservationType, 
                    System.DateTime setResDateFrom, 
                    System.DateTime setResTimeFrom, 
                    System.DateTime setResDateTo, 
                    System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    int setNoOfPersons, 
                    string errorString) {
            this.InsertGroupReservationAsync(setReservationNo, setReservationType, setResDateFrom, setResTimeFrom, setResDateTo, setResTimeTo, setCustomerAccount, setDescription, setComment, setReference, setContactNo, setClientName, setEmail, setLocation, setSalesPerson, setInternalstatus, setStatus, setNoOfPersons, errorString, null);
        }
        
        /// <remarks/>
        public void InsertGroupReservationAsync(
                    string setReservationNo, 
                    string setReservationType, 
                    System.DateTime setResDateFrom, 
                    System.DateTime setResTimeFrom, 
                    System.DateTime setResDateTo, 
                    System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    int setNoOfPersons, 
                    string errorString, 
                    object userState) {
            if ((this.InsertGroupReservationOperationCompleted == null)) {
                this.InsertGroupReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGroupReservationOperationCompleted);
            }
            this.InvokeAsync("InsertGroupReservation", new object[] {
                        setReservationNo,
                        setReservationType,
                        setResDateFrom,
                        setResTimeFrom,
                        setResDateTo,
                        setResTimeTo,
                        setCustomerAccount,
                        setDescription,
                        setComment,
                        setReference,
                        setContactNo,
                        setClientName,
                        setEmail,
                        setLocation,
                        setSalesPerson,
                        setInternalstatus,
                        setStatus,
                        setNoOfPersons,
                        errorString}, this.InsertGroupReservationOperationCompleted, userState);
        }
        
        private void OnInsertGroupReservationOperationCompleted(object arg) {
            if ((this.InsertGroupReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGroupReservationCompleted(this, new InsertGroupReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:InsertMemberDeposit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="InsertMemberDeposit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertMemberDeposit(string clientNo, decimal amount, ref string errorString, ref string returnItemNo, ref string returnBookingRef) {
            object[] results = this.Invoke("InsertMemberDeposit", new object[] {
                        clientNo,
                        amount,
                        errorString,
                        returnItemNo,
                        returnBookingRef});
            errorString = ((string)(results[1]));
            returnItemNo = ((string)(results[2]));
            returnBookingRef = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMemberDepositAsync(string clientNo, decimal amount, string errorString, string returnItemNo, string returnBookingRef) {
            this.InsertMemberDepositAsync(clientNo, amount, errorString, returnItemNo, returnBookingRef, null);
        }
        
        /// <remarks/>
        public void InsertMemberDepositAsync(string clientNo, decimal amount, string errorString, string returnItemNo, string returnBookingRef, object userState) {
            if ((this.InsertMemberDepositOperationCompleted == null)) {
                this.InsertMemberDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMemberDepositOperationCompleted);
            }
            this.InvokeAsync("InsertMemberDeposit", new object[] {
                        clientNo,
                        amount,
                        errorString,
                        returnItemNo,
                        returnBookingRef}, this.InsertMemberDepositOperationCompleted, userState);
        }
        
        private void OnInsertMemberDepositOperationCompleted(object arg) {
            if ((this.InsertMemberDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMemberDepositCompleted(this, new InsertMemberDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:InsertReservation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="InsertReservation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool InsertReservation(
                    ref string setReservationNo, 
                    string setReservationType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime setResDateFrom, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime setResTimeFrom, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime setResDateTo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    ref string errorString) {
            object[] results = this.Invoke("InsertReservation", new object[] {
                        setReservationNo,
                        setReservationType,
                        setResDateFrom,
                        setResTimeFrom,
                        setResDateTo,
                        setResTimeTo,
                        setCustomerAccount,
                        setDescription,
                        setComment,
                        setReference,
                        setContactNo,
                        setClientName,
                        setEmail,
                        setLocation,
                        setSalesPerson,
                        setInternalstatus,
                        setStatus,
                        errorString});
            setReservationNo = ((string)(results[1]));
            errorString = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertReservationAsync(
                    string setReservationNo, 
                    string setReservationType, 
                    System.DateTime setResDateFrom, 
                    System.DateTime setResTimeFrom, 
                    System.DateTime setResDateTo, 
                    System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    string errorString) {
            this.InsertReservationAsync(setReservationNo, setReservationType, setResDateFrom, setResTimeFrom, setResDateTo, setResTimeTo, setCustomerAccount, setDescription, setComment, setReference, setContactNo, setClientName, setEmail, setLocation, setSalesPerson, setInternalstatus, setStatus, errorString, null);
        }
        
        /// <remarks/>
        public void InsertReservationAsync(
                    string setReservationNo, 
                    string setReservationType, 
                    System.DateTime setResDateFrom, 
                    System.DateTime setResTimeFrom, 
                    System.DateTime setResDateTo, 
                    System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    string errorString, 
                    object userState) {
            if ((this.InsertReservationOperationCompleted == null)) {
                this.InsertReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReservationOperationCompleted);
            }
            this.InvokeAsync("InsertReservation", new object[] {
                        setReservationNo,
                        setReservationType,
                        setResDateFrom,
                        setResTimeFrom,
                        setResDateTo,
                        setResTimeTo,
                        setCustomerAccount,
                        setDescription,
                        setComment,
                        setReference,
                        setContactNo,
                        setClientName,
                        setEmail,
                        setLocation,
                        setSalesPerson,
                        setInternalstatus,
                        setStatus,
                        errorString}, this.InsertReservationOperationCompleted, userState);
        }
        
        private void OnInsertReservationOperationCompleted(object arg) {
            if ((this.InsertReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReservationCompleted(this, new InsertReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:PreSellActivityProduct", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="PreSellActivityProduct_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool PreSellActivityProduct(string locationNo, string promoCode, string clientNo, string productNo, int quantity, ref string returnItemNo, ref decimal returnUnitPrice, ref string returnBookingRef, ref string errorMsg) {
            object[] results = this.Invoke("PreSellActivityProduct", new object[] {
                        locationNo,
                        promoCode,
                        clientNo,
                        productNo,
                        quantity,
                        returnItemNo,
                        returnUnitPrice,
                        returnBookingRef,
                        errorMsg});
            returnItemNo = ((string)(results[1]));
            returnUnitPrice = ((decimal)(results[2]));
            returnBookingRef = ((string)(results[3]));
            errorMsg = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PreSellActivityProductAsync(string locationNo, string promoCode, string clientNo, string productNo, int quantity, string returnItemNo, decimal returnUnitPrice, string returnBookingRef, string errorMsg) {
            this.PreSellActivityProductAsync(locationNo, promoCode, clientNo, productNo, quantity, returnItemNo, returnUnitPrice, returnBookingRef, errorMsg, null);
        }
        
        /// <remarks/>
        public void PreSellActivityProductAsync(string locationNo, string promoCode, string clientNo, string productNo, int quantity, string returnItemNo, decimal returnUnitPrice, string returnBookingRef, string errorMsg, object userState) {
            if ((this.PreSellActivityProductOperationCompleted == null)) {
                this.PreSellActivityProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreSellActivityProductOperationCompleted);
            }
            this.InvokeAsync("PreSellActivityProduct", new object[] {
                        locationNo,
                        promoCode,
                        clientNo,
                        productNo,
                        quantity,
                        returnItemNo,
                        returnUnitPrice,
                        returnBookingRef,
                        errorMsg}, this.PreSellActivityProductOperationCompleted, userState);
        }
        
        private void OnPreSellActivityProductOperationCompleted(object arg) {
            if ((this.PreSellActivityProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreSellActivityProductCompleted(this, new PreSellActivityProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:SellMembershipV2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="SellMembershipV2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SellMembershipV2(string clientNo, string membershipType, ref string returnMembershipNo, ref string returnItemNo, ref decimal returnPrice, ref decimal returnQty, ref decimal returnDiscount, ref string returnBookingRef, ref string errorString) {
            object[] results = this.Invoke("SellMembershipV2", new object[] {
                        clientNo,
                        membershipType,
                        returnMembershipNo,
                        returnItemNo,
                        returnPrice,
                        returnQty,
                        returnDiscount,
                        returnBookingRef,
                        errorString});
            returnMembershipNo = ((string)(results[1]));
            returnItemNo = ((string)(results[2]));
            returnPrice = ((decimal)(results[3]));
            returnQty = ((decimal)(results[4]));
            returnDiscount = ((decimal)(results[5]));
            returnBookingRef = ((string)(results[6]));
            errorString = ((string)(results[7]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SellMembershipV2Async(string clientNo, string membershipType, string returnMembershipNo, string returnItemNo, decimal returnPrice, decimal returnQty, decimal returnDiscount, string returnBookingRef, string errorString) {
            this.SellMembershipV2Async(clientNo, membershipType, returnMembershipNo, returnItemNo, returnPrice, returnQty, returnDiscount, returnBookingRef, errorString, null);
        }
        
        /// <remarks/>
        public void SellMembershipV2Async(string clientNo, string membershipType, string returnMembershipNo, string returnItemNo, decimal returnPrice, decimal returnQty, decimal returnDiscount, string returnBookingRef, string errorString, object userState) {
            if ((this.SellMembershipV2OperationCompleted == null)) {
                this.SellMembershipV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSellMembershipV2OperationCompleted);
            }
            this.InvokeAsync("SellMembershipV2", new object[] {
                        clientNo,
                        membershipType,
                        returnMembershipNo,
                        returnItemNo,
                        returnPrice,
                        returnQty,
                        returnDiscount,
                        returnBookingRef,
                        errorString}, this.SellMembershipV2OperationCompleted, userState);
        }
        
        private void OnSellMembershipV2OperationCompleted(object arg) {
            if ((this.SellMembershipV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SellMembershipV2Completed(this, new SellMembershipV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:SellMembership", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="SellMembership_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SellMembership(string clientNo, string membershipType, ref string returnMembershipNo, ref string returnItemNo, ref decimal returnPrice, ref decimal returnQty, ref decimal returnDiscount, ref string errorString) {
            object[] results = this.Invoke("SellMembership", new object[] {
                        clientNo,
                        membershipType,
                        returnMembershipNo,
                        returnItemNo,
                        returnPrice,
                        returnQty,
                        returnDiscount,
                        errorString});
            returnMembershipNo = ((string)(results[1]));
            returnItemNo = ((string)(results[2]));
            returnPrice = ((decimal)(results[3]));
            returnQty = ((decimal)(results[4]));
            returnDiscount = ((decimal)(results[5]));
            errorString = ((string)(results[6]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SellMembershipAsync(string clientNo, string membershipType, string returnMembershipNo, string returnItemNo, decimal returnPrice, decimal returnQty, decimal returnDiscount, string errorString) {
            this.SellMembershipAsync(clientNo, membershipType, returnMembershipNo, returnItemNo, returnPrice, returnQty, returnDiscount, errorString, null);
        }
        
        /// <remarks/>
        public void SellMembershipAsync(string clientNo, string membershipType, string returnMembershipNo, string returnItemNo, decimal returnPrice, decimal returnQty, decimal returnDiscount, string errorString, object userState) {
            if ((this.SellMembershipOperationCompleted == null)) {
                this.SellMembershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSellMembershipOperationCompleted);
            }
            this.InvokeAsync("SellMembership", new object[] {
                        clientNo,
                        membershipType,
                        returnMembershipNo,
                        returnItemNo,
                        returnPrice,
                        returnQty,
                        returnDiscount,
                        errorString}, this.SellMembershipOperationCompleted, userState);
        }
        
        private void OnSellMembershipOperationCompleted(object arg) {
            if ((this.SellMembershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SellMembershipCompleted(this, new SellMembershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:SetAdditionalChargesV2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="SetAdditionalChargesV2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SetAdditionalChargesV2(string activityNo, int lineNo, int productType, string productNo, decimal qty, decimal price, decimal discountPercentage, string unitOfMeasure, ref string errorString) {
            object[] results = this.Invoke("SetAdditionalChargesV2", new object[] {
                        activityNo,
                        lineNo,
                        productType,
                        productNo,
                        qty,
                        price,
                        discountPercentage,
                        unitOfMeasure,
                        errorString});
            errorString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetAdditionalChargesV2Async(string activityNo, int lineNo, int productType, string productNo, decimal qty, decimal price, decimal discountPercentage, string unitOfMeasure, string errorString) {
            this.SetAdditionalChargesV2Async(activityNo, lineNo, productType, productNo, qty, price, discountPercentage, unitOfMeasure, errorString, null);
        }
        
        /// <remarks/>
        public void SetAdditionalChargesV2Async(string activityNo, int lineNo, int productType, string productNo, decimal qty, decimal price, decimal discountPercentage, string unitOfMeasure, string errorString, object userState) {
            if ((this.SetAdditionalChargesV2OperationCompleted == null)) {
                this.SetAdditionalChargesV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAdditionalChargesV2OperationCompleted);
            }
            this.InvokeAsync("SetAdditionalChargesV2", new object[] {
                        activityNo,
                        lineNo,
                        productType,
                        productNo,
                        qty,
                        price,
                        discountPercentage,
                        unitOfMeasure,
                        errorString}, this.SetAdditionalChargesV2OperationCompleted, userState);
        }
        
        private void OnSetAdditionalChargesV2OperationCompleted(object arg) {
            if ((this.SetAdditionalChargesV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAdditionalChargesV2Completed(this, new SetAdditionalChargesV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:SetAdditionalCharges", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="SetAdditionalCharges_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SetAdditionalCharges(string activityNo, int lineNo, string itemNo, decimal qty, decimal price, decimal discountPercentage, string unitOfMeasure, ref string errorString) {
            object[] results = this.Invoke("SetAdditionalCharges", new object[] {
                        activityNo,
                        lineNo,
                        itemNo,
                        qty,
                        price,
                        discountPercentage,
                        unitOfMeasure,
                        errorString});
            errorString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetAdditionalChargesAsync(string activityNo, int lineNo, string itemNo, decimal qty, decimal price, decimal discountPercentage, string unitOfMeasure, string errorString) {
            this.SetAdditionalChargesAsync(activityNo, lineNo, itemNo, qty, price, discountPercentage, unitOfMeasure, errorString, null);
        }
        
        /// <remarks/>
        public void SetAdditionalChargesAsync(string activityNo, int lineNo, string itemNo, decimal qty, decimal price, decimal discountPercentage, string unitOfMeasure, string errorString, object userState) {
            if ((this.SetAdditionalChargesOperationCompleted == null)) {
                this.SetAdditionalChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAdditionalChargesOperationCompleted);
            }
            this.InvokeAsync("SetAdditionalCharges", new object[] {
                        activityNo,
                        lineNo,
                        itemNo,
                        qty,
                        price,
                        discountPercentage,
                        unitOfMeasure,
                        errorString}, this.SetAdditionalChargesOperationCompleted, userState);
        }
        
        private void OnSetAdditionalChargesOperationCompleted(object arg) {
            if ((this.SetAdditionalChargesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAdditionalChargesCompleted(this, new SetAdditionalChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:SetAttribute", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="SetAttribute_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SetAttribute(int type, string linkNo, string attributeCode, string attributeValue, ref int attributeSequence, ref string errorString) {
            object[] results = this.Invoke("SetAttribute", new object[] {
                        type,
                        linkNo,
                        attributeCode,
                        attributeValue,
                        attributeSequence,
                        errorString});
            attributeSequence = ((int)(results[1]));
            errorString = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetAttributeAsync(int type, string linkNo, string attributeCode, string attributeValue, int attributeSequence, string errorString) {
            this.SetAttributeAsync(type, linkNo, attributeCode, attributeValue, attributeSequence, errorString, null);
        }
        
        /// <remarks/>
        public void SetAttributeAsync(int type, string linkNo, string attributeCode, string attributeValue, int attributeSequence, string errorString, object userState) {
            if ((this.SetAttributeOperationCompleted == null)) {
                this.SetAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAttributeOperationCompleted);
            }
            this.InvokeAsync("SetAttribute", new object[] {
                        type,
                        linkNo,
                        attributeCode,
                        attributeValue,
                        attributeSequence,
                        errorString}, this.SetAttributeOperationCompleted, userState);
        }
        
        private void OnSetAttributeOperationCompleted(object arg) {
            if ((this.SetAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAttributeCompleted(this, new SetAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UpdateGroupHeaderStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UpdateGroupHeaderStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateGroupHeaderStatus(string groupNo, string setStatusCode, ref string errorString) {
            object[] results = this.Invoke("UpdateGroupHeaderStatus", new object[] {
                        groupNo,
                        setStatusCode,
                        errorString});
            errorString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupHeaderStatusAsync(string groupNo, string setStatusCode, string errorString) {
            this.UpdateGroupHeaderStatusAsync(groupNo, setStatusCode, errorString, null);
        }
        
        /// <remarks/>
        public void UpdateGroupHeaderStatusAsync(string groupNo, string setStatusCode, string errorString, object userState) {
            if ((this.UpdateGroupHeaderStatusOperationCompleted == null)) {
                this.UpdateGroupHeaderStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupHeaderStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupHeaderStatus", new object[] {
                        groupNo,
                        setStatusCode,
                        errorString}, this.UpdateGroupHeaderStatusOperationCompleted, userState);
        }
        
        private void OnUpdateGroupHeaderStatusOperationCompleted(object arg) {
            if ((this.UpdateGroupHeaderStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupHeaderStatusCompleted(this, new UpdateGroupHeaderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UpdateGroupReservation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UpdateGroupReservation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateGroupReservation(
                    string reservationNo, 
                    string setReservationType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime setResDateFrom, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime setResTimeFrom, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime setResDateTo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    int setNoOfPersons, 
                    ref string errorString) {
            object[] results = this.Invoke("UpdateGroupReservation", new object[] {
                        reservationNo,
                        setReservationType,
                        setResDateFrom,
                        setResTimeFrom,
                        setResDateTo,
                        setResTimeTo,
                        setCustomerAccount,
                        setDescription,
                        setComment,
                        setReference,
                        setContactNo,
                        setClientName,
                        setEmail,
                        setLocation,
                        setSalesPerson,
                        setInternalstatus,
                        setStatus,
                        setNoOfPersons,
                        errorString});
            errorString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupReservationAsync(
                    string reservationNo, 
                    string setReservationType, 
                    System.DateTime setResDateFrom, 
                    System.DateTime setResTimeFrom, 
                    System.DateTime setResDateTo, 
                    System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    int setNoOfPersons, 
                    string errorString) {
            this.UpdateGroupReservationAsync(reservationNo, setReservationType, setResDateFrom, setResTimeFrom, setResDateTo, setResTimeTo, setCustomerAccount, setDescription, setComment, setReference, setContactNo, setClientName, setEmail, setLocation, setSalesPerson, setInternalstatus, setStatus, setNoOfPersons, errorString, null);
        }
        
        /// <remarks/>
        public void UpdateGroupReservationAsync(
                    string reservationNo, 
                    string setReservationType, 
                    System.DateTime setResDateFrom, 
                    System.DateTime setResTimeFrom, 
                    System.DateTime setResDateTo, 
                    System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    int setNoOfPersons, 
                    string errorString, 
                    object userState) {
            if ((this.UpdateGroupReservationOperationCompleted == null)) {
                this.UpdateGroupReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupReservationOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupReservation", new object[] {
                        reservationNo,
                        setReservationType,
                        setResDateFrom,
                        setResTimeFrom,
                        setResDateTo,
                        setResTimeTo,
                        setCustomerAccount,
                        setDescription,
                        setComment,
                        setReference,
                        setContactNo,
                        setClientName,
                        setEmail,
                        setLocation,
                        setSalesPerson,
                        setInternalstatus,
                        setStatus,
                        setNoOfPersons,
                        errorString}, this.UpdateGroupReservationOperationCompleted, userState);
        }
        
        private void OnUpdateGroupReservationOperationCompleted(object arg) {
            if ((this.UpdateGroupReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupReservationCompleted(this, new UpdateGroupReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UpdateReservation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UpdateReservation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool UpdateReservation(
                    string reservationNo, 
                    string setReservationType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime setResDateFrom, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime setResTimeFrom, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime setResDateTo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    ref string errorString) {
            object[] results = this.Invoke("UpdateReservation", new object[] {
                        reservationNo,
                        setReservationType,
                        setResDateFrom,
                        setResTimeFrom,
                        setResDateTo,
                        setResTimeTo,
                        setCustomerAccount,
                        setDescription,
                        setComment,
                        setReference,
                        setContactNo,
                        setClientName,
                        setEmail,
                        setLocation,
                        setSalesPerson,
                        setInternalstatus,
                        setStatus,
                        errorString});
            errorString = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReservationAsync(
                    string reservationNo, 
                    string setReservationType, 
                    System.DateTime setResDateFrom, 
                    System.DateTime setResTimeFrom, 
                    System.DateTime setResDateTo, 
                    System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    string errorString) {
            this.UpdateReservationAsync(reservationNo, setReservationType, setResDateFrom, setResTimeFrom, setResDateTo, setResTimeTo, setCustomerAccount, setDescription, setComment, setReference, setContactNo, setClientName, setEmail, setLocation, setSalesPerson, setInternalstatus, setStatus, errorString, null);
        }
        
        /// <remarks/>
        public void UpdateReservationAsync(
                    string reservationNo, 
                    string setReservationType, 
                    System.DateTime setResDateFrom, 
                    System.DateTime setResTimeFrom, 
                    System.DateTime setResDateTo, 
                    System.DateTime setResTimeTo, 
                    string setCustomerAccount, 
                    string setDescription, 
                    string setComment, 
                    string setReference, 
                    string setContactNo, 
                    string setClientName, 
                    string setEmail, 
                    string setLocation, 
                    string setSalesPerson, 
                    int setInternalstatus, 
                    string setStatus, 
                    string errorString, 
                    object userState) {
            if ((this.UpdateReservationOperationCompleted == null)) {
                this.UpdateReservationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReservationOperationCompleted);
            }
            this.InvokeAsync("UpdateReservation", new object[] {
                        reservationNo,
                        setReservationType,
                        setResDateFrom,
                        setResTimeFrom,
                        setResDateTo,
                        setResTimeTo,
                        setCustomerAccount,
                        setDescription,
                        setComment,
                        setReference,
                        setContactNo,
                        setClientName,
                        setEmail,
                        setLocation,
                        setSalesPerson,
                        setInternalstatus,
                        setStatus,
                        errorString}, this.UpdateReservationOperationCompleted, userState);
        }
        
        private void OnUpdateReservationOperationCompleted(object arg) {
            if ((this.UpdateReservationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReservationCompleted(this, new UpdateReservationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadActivityLocations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadActivityLocations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadActivityLocations(ref ActivityUploadLocations uploadLocations) {
            object[] results = this.Invoke("UploadActivityLocations", new object[] {
                        uploadLocations});
            uploadLocations = ((ActivityUploadLocations)(results[0]));
        }
        
        /// <remarks/>
        public void UploadActivityLocationsAsync(ActivityUploadLocations uploadLocations) {
            this.UploadActivityLocationsAsync(uploadLocations, null);
        }
        
        /// <remarks/>
        public void UploadActivityLocationsAsync(ActivityUploadLocations uploadLocations, object userState) {
            if ((this.UploadActivityLocationsOperationCompleted == null)) {
                this.UploadActivityLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadActivityLocationsOperationCompleted);
            }
            this.InvokeAsync("UploadActivityLocations", new object[] {
                        uploadLocations}, this.UploadActivityLocationsOperationCompleted, userState);
        }
        
        private void OnUploadActivityLocationsOperationCompleted(object arg) {
            if ((this.UploadActivityLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadActivityLocationsCompleted(this, new UploadActivityLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadActivityProducts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadActivityProducts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadActivityProducts(ref ActivityUploadProducts uploadProducts) {
            object[] results = this.Invoke("UploadActivityProducts", new object[] {
                        uploadProducts});
            uploadProducts = ((ActivityUploadProducts)(results[0]));
        }
        
        /// <remarks/>
        public void UploadActivityProductsAsync(ActivityUploadProducts uploadProducts) {
            this.UploadActivityProductsAsync(uploadProducts, null);
        }
        
        /// <remarks/>
        public void UploadActivityProductsAsync(ActivityUploadProducts uploadProducts, object userState) {
            if ((this.UploadActivityProductsOperationCompleted == null)) {
                this.UploadActivityProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadActivityProductsOperationCompleted);
            }
            this.InvokeAsync("UploadActivityProducts", new object[] {
                        uploadProducts}, this.UploadActivityProductsOperationCompleted, userState);
        }
        
        private void OnUploadActivityProductsOperationCompleted(object arg) {
            if ((this.UploadActivityProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadActivityProductsCompleted(this, new UploadActivityProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadActivityResources", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadActivityResources_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadActivityResources(ref ActivityUploadResources uploadResources) {
            object[] results = this.Invoke("UploadActivityResources", new object[] {
                        uploadResources});
            uploadResources = ((ActivityUploadResources)(results[0]));
        }
        
        /// <remarks/>
        public void UploadActivityResourcesAsync(ActivityUploadResources uploadResources) {
            this.UploadActivityResourcesAsync(uploadResources, null);
        }
        
        /// <remarks/>
        public void UploadActivityResourcesAsync(ActivityUploadResources uploadResources, object userState) {
            if ((this.UploadActivityResourcesOperationCompleted == null)) {
                this.UploadActivityResourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadActivityResourcesOperationCompleted);
            }
            this.InvokeAsync("UploadActivityResources", new object[] {
                        uploadResources}, this.UploadActivityResourcesOperationCompleted, userState);
        }
        
        private void OnUploadActivityResourcesOperationCompleted(object arg) {
            if ((this.UploadActivityResourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadActivityResourcesCompleted(this, new UploadActivityResourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadActivityTypes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadActivityTypes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadActivityTypes(ref ActivityUploadTypes uploadTypes) {
            object[] results = this.Invoke("UploadActivityTypes", new object[] {
                        uploadTypes});
            uploadTypes = ((ActivityUploadTypes)(results[0]));
        }
        
        /// <remarks/>
        public void UploadActivityTypesAsync(ActivityUploadTypes uploadTypes) {
            this.UploadActivityTypesAsync(uploadTypes, null);
        }
        
        /// <remarks/>
        public void UploadActivityTypesAsync(ActivityUploadTypes uploadTypes, object userState) {
            if ((this.UploadActivityTypesOperationCompleted == null)) {
                this.UploadActivityTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadActivityTypesOperationCompleted);
            }
            this.InvokeAsync("UploadActivityTypes", new object[] {
                        uploadTypes}, this.UploadActivityTypesOperationCompleted, userState);
        }
        
        private void OnUploadActivityTypesOperationCompleted(object arg) {
            if ((this.UploadActivityTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadActivityTypesCompleted(this, new UploadActivityTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadAdmissionEntries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadAdmissionEntries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadAdmissionEntries(string clientNo, ref ActivityAdmissionEntries activityAdmissionEntries) {
            object[] results = this.Invoke("UploadAdmissionEntries", new object[] {
                        clientNo,
                        activityAdmissionEntries});
            activityAdmissionEntries = ((ActivityAdmissionEntries)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAdmissionEntriesAsync(string clientNo, ActivityAdmissionEntries activityAdmissionEntries) {
            this.UploadAdmissionEntriesAsync(clientNo, activityAdmissionEntries, null);
        }
        
        /// <remarks/>
        public void UploadAdmissionEntriesAsync(string clientNo, ActivityAdmissionEntries activityAdmissionEntries, object userState) {
            if ((this.UploadAdmissionEntriesOperationCompleted == null)) {
                this.UploadAdmissionEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAdmissionEntriesOperationCompleted);
            }
            this.InvokeAsync("UploadAdmissionEntries", new object[] {
                        clientNo,
                        activityAdmissionEntries}, this.UploadAdmissionEntriesOperationCompleted, userState);
        }
        
        private void OnUploadAdmissionEntriesOperationCompleted(object arg) {
            if ((this.UploadAdmissionEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAdmissionEntriesCompleted(this, new UploadAdmissionEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadClientBookingsV2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadClientBookingsV2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadClientBookingsV2(string clientNo, string activityType, ref ActivityUploadReservations activityReservations) {
            object[] results = this.Invoke("UploadClientBookingsV2", new object[] {
                        clientNo,
                        activityType,
                        activityReservations});
            activityReservations = ((ActivityUploadReservations)(results[0]));
        }
        
        /// <remarks/>
        public void UploadClientBookingsV2Async(string clientNo, string activityType, ActivityUploadReservations activityReservations) {
            this.UploadClientBookingsV2Async(clientNo, activityType, activityReservations, null);
        }
        
        /// <remarks/>
        public void UploadClientBookingsV2Async(string clientNo, string activityType, ActivityUploadReservations activityReservations, object userState) {
            if ((this.UploadClientBookingsV2OperationCompleted == null)) {
                this.UploadClientBookingsV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadClientBookingsV2OperationCompleted);
            }
            this.InvokeAsync("UploadClientBookingsV2", new object[] {
                        clientNo,
                        activityType,
                        activityReservations}, this.UploadClientBookingsV2OperationCompleted, userState);
        }
        
        private void OnUploadClientBookingsV2OperationCompleted(object arg) {
            if ((this.UploadClientBookingsV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadClientBookingsV2Completed(this, new UploadClientBookingsV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadClientBookings", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadClientBookings_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadClientBookings(string clientNo, ref ActivityUploadReservations activityReservations) {
            object[] results = this.Invoke("UploadClientBookings", new object[] {
                        clientNo,
                        activityReservations});
            activityReservations = ((ActivityUploadReservations)(results[0]));
        }
        
        /// <remarks/>
        public void UploadClientBookingsAsync(string clientNo, ActivityUploadReservations activityReservations) {
            this.UploadClientBookingsAsync(clientNo, activityReservations, null);
        }
        
        /// <remarks/>
        public void UploadClientBookingsAsync(string clientNo, ActivityUploadReservations activityReservations, object userState) {
            if ((this.UploadClientBookingsOperationCompleted == null)) {
                this.UploadClientBookingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadClientBookingsOperationCompleted);
            }
            this.InvokeAsync("UploadClientBookings", new object[] {
                        clientNo,
                        activityReservations}, this.UploadClientBookingsOperationCompleted, userState);
        }
        
        private void OnUploadClientBookingsOperationCompleted(object arg) {
            if ((this.UploadClientBookingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadClientBookingsCompleted(this, new UploadClientBookingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadCustomerEntries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadCustomerEntries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadCustomerEntries(string clientNo, string customerNo, ref ActivityCustomerEntries activityCustomerEntries) {
            object[] results = this.Invoke("UploadCustomerEntries", new object[] {
                        clientNo,
                        customerNo,
                        activityCustomerEntries});
            activityCustomerEntries = ((ActivityCustomerEntries)(results[0]));
        }
        
        /// <remarks/>
        public void UploadCustomerEntriesAsync(string clientNo, string customerNo, ActivityCustomerEntries activityCustomerEntries) {
            this.UploadCustomerEntriesAsync(clientNo, customerNo, activityCustomerEntries, null);
        }
        
        /// <remarks/>
        public void UploadCustomerEntriesAsync(string clientNo, string customerNo, ActivityCustomerEntries activityCustomerEntries, object userState) {
            if ((this.UploadCustomerEntriesOperationCompleted == null)) {
                this.UploadCustomerEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadCustomerEntriesOperationCompleted);
            }
            this.InvokeAsync("UploadCustomerEntries", new object[] {
                        clientNo,
                        customerNo,
                        activityCustomerEntries}, this.UploadCustomerEntriesOperationCompleted, userState);
        }
        
        private void OnUploadCustomerEntriesOperationCompleted(object arg) {
            if ((this.UploadCustomerEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCustomerEntriesCompleted(this, new UploadCustomerEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadMemberDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadMemberDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadMemberDetails(string clientNo, ref ActivityMemberDetails activityMemberDetails) {
            object[] results = this.Invoke("UploadMemberDetails", new object[] {
                        clientNo,
                        activityMemberDetails});
            activityMemberDetails = ((ActivityMemberDetails)(results[0]));
        }
        
        /// <remarks/>
        public void UploadMemberDetailsAsync(string clientNo, ActivityMemberDetails activityMemberDetails) {
            this.UploadMemberDetailsAsync(clientNo, activityMemberDetails, null);
        }
        
        /// <remarks/>
        public void UploadMemberDetailsAsync(string clientNo, ActivityMemberDetails activityMemberDetails, object userState) {
            if ((this.UploadMemberDetailsOperationCompleted == null)) {
                this.UploadMemberDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadMemberDetailsOperationCompleted);
            }
            this.InvokeAsync("UploadMemberDetails", new object[] {
                        clientNo,
                        activityMemberDetails}, this.UploadMemberDetailsOperationCompleted, userState);
        }
        
        private void OnUploadMemberDetailsOperationCompleted(object arg) {
            if ((this.UploadMemberDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadMemberDetailsCompleted(this, new UploadMemberDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadMembershipEntries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadMembershipEntries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadMembershipEntries(string clientNo, ref ActivityUploadMemberships activityUploadMemberships) {
            object[] results = this.Invoke("UploadMembershipEntries", new object[] {
                        clientNo,
                        activityUploadMemberships});
            activityUploadMemberships = ((ActivityUploadMemberships)(results[0]));
        }
        
        /// <remarks/>
        public void UploadMembershipEntriesAsync(string clientNo, ActivityUploadMemberships activityUploadMemberships) {
            this.UploadMembershipEntriesAsync(clientNo, activityUploadMemberships, null);
        }
        
        /// <remarks/>
        public void UploadMembershipEntriesAsync(string clientNo, ActivityUploadMemberships activityUploadMemberships, object userState) {
            if ((this.UploadMembershipEntriesOperationCompleted == null)) {
                this.UploadMembershipEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadMembershipEntriesOperationCompleted);
            }
            this.InvokeAsync("UploadMembershipEntries", new object[] {
                        clientNo,
                        activityUploadMemberships}, this.UploadMembershipEntriesOperationCompleted, userState);
        }
        
        private void OnUploadMembershipEntriesOperationCompleted(object arg) {
            if ((this.UploadMembershipEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadMembershipEntriesCompleted(this, new UploadMembershipEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadMembershipProducts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadMembershipProducts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadMembershipProducts(ref ActivityMembershipProducts uploadProducts) {
            object[] results = this.Invoke("UploadMembershipProducts", new object[] {
                        uploadProducts});
            uploadProducts = ((ActivityMembershipProducts)(results[0]));
        }
        
        /// <remarks/>
        public void UploadMembershipProductsAsync(ActivityMembershipProducts uploadProducts) {
            this.UploadMembershipProductsAsync(uploadProducts, null);
        }
        
        /// <remarks/>
        public void UploadMembershipProductsAsync(ActivityMembershipProducts uploadProducts, object userState) {
            if ((this.UploadMembershipProductsOperationCompleted == null)) {
                this.UploadMembershipProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadMembershipProductsOperationCompleted);
            }
            this.InvokeAsync("UploadMembershipProducts", new object[] {
                        uploadProducts}, this.UploadMembershipProductsOperationCompleted, userState);
        }
        
        private void OnUploadMembershipProductsOperationCompleted(object arg) {
            if ((this.UploadMembershipProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadMembershipProductsCompleted(this, new UploadMembershipProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadMembershipSubscriptionChar" +
            "ges", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadMembershipSubscriptionCharges_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadMembershipSubscriptionCharges(string clientNo, ref ActivitySubscriptionEntries activitySubscriptionEntries) {
            object[] results = this.Invoke("UploadMembershipSubscriptionCharges", new object[] {
                        clientNo,
                        activitySubscriptionEntries});
            activitySubscriptionEntries = ((ActivitySubscriptionEntries)(results[0]));
        }
        
        /// <remarks/>
        public void UploadMembershipSubscriptionChargesAsync(string clientNo, ActivitySubscriptionEntries activitySubscriptionEntries) {
            this.UploadMembershipSubscriptionChargesAsync(clientNo, activitySubscriptionEntries, null);
        }
        
        /// <remarks/>
        public void UploadMembershipSubscriptionChargesAsync(string clientNo, ActivitySubscriptionEntries activitySubscriptionEntries, object userState) {
            if ((this.UploadMembershipSubscriptionChargesOperationCompleted == null)) {
                this.UploadMembershipSubscriptionChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadMembershipSubscriptionChargesOperationCompleted);
            }
            this.InvokeAsync("UploadMembershipSubscriptionCharges", new object[] {
                        clientNo,
                        activitySubscriptionEntries}, this.UploadMembershipSubscriptionChargesOperationCompleted, userState);
        }
        
        private void OnUploadMembershipSubscriptionChargesOperationCompleted(object arg) {
            if ((this.UploadMembershipSubscriptionChargesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadMembershipSubscriptionChargesCompleted(this, new UploadMembershipSubscriptionChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadPromotions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadPromotions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadPromotions(ref ActivityUploadPromotions activityPromotions) {
            object[] results = this.Invoke("UploadPromotions", new object[] {
                        activityPromotions});
            activityPromotions = ((ActivityUploadPromotions)(results[0]));
        }
        
        /// <remarks/>
        public void UploadPromotionsAsync(ActivityUploadPromotions activityPromotions) {
            this.UploadPromotionsAsync(activityPromotions, null);
        }
        
        /// <remarks/>
        public void UploadPromotionsAsync(ActivityUploadPromotions activityPromotions, object userState) {
            if ((this.UploadPromotionsOperationCompleted == null)) {
                this.UploadPromotionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadPromotionsOperationCompleted);
            }
            this.InvokeAsync("UploadPromotions", new object[] {
                        activityPromotions}, this.UploadPromotionsOperationCompleted, userState);
        }
        
        private void OnUploadPromotionsOperationCompleted(object arg) {
            if ((this.UploadPromotionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadPromotionsCompleted(this, new UploadPromotionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadPurchasedAllowances", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadPurchasedAllowances_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadPurchasedAllowances(string clientNo, ref ActivityUploadAllowance activityIssuedAllowance) {
            object[] results = this.Invoke("UploadPurchasedAllowances", new object[] {
                        clientNo,
                        activityIssuedAllowance});
            activityIssuedAllowance = ((ActivityUploadAllowance)(results[0]));
        }
        
        /// <remarks/>
        public void UploadPurchasedAllowancesAsync(string clientNo, ActivityUploadAllowance activityIssuedAllowance) {
            this.UploadPurchasedAllowancesAsync(clientNo, activityIssuedAllowance, null);
        }
        
        /// <remarks/>
        public void UploadPurchasedAllowancesAsync(string clientNo, ActivityUploadAllowance activityIssuedAllowance, object userState) {
            if ((this.UploadPurchasedAllowancesOperationCompleted == null)) {
                this.UploadPurchasedAllowancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadPurchasedAllowancesOperationCompleted);
            }
            this.InvokeAsync("UploadPurchasedAllowances", new object[] {
                        clientNo,
                        activityIssuedAllowance}, this.UploadPurchasedAllowancesOperationCompleted, userState);
        }
        
        private void OnUploadPurchasedAllowancesOperationCompleted(object arg) {
            if ((this.UploadPurchasedAllowancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadPurchasedAllowancesCompleted(this, new UploadPurchasedAllowancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadReservationActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadReservationActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadReservationActivities(string reservationNo, ref ActivityUploadReservations activityReservations) {
            object[] results = this.Invoke("UploadReservationActivities", new object[] {
                        reservationNo,
                        activityReservations});
            activityReservations = ((ActivityUploadReservations)(results[0]));
        }
        
        /// <remarks/>
        public void UploadReservationActivitiesAsync(string reservationNo, ActivityUploadReservations activityReservations) {
            this.UploadReservationActivitiesAsync(reservationNo, activityReservations, null);
        }
        
        /// <remarks/>
        public void UploadReservationActivitiesAsync(string reservationNo, ActivityUploadReservations activityReservations, object userState) {
            if ((this.UploadReservationActivitiesOperationCompleted == null)) {
                this.UploadReservationActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadReservationActivitiesOperationCompleted);
            }
            this.InvokeAsync("UploadReservationActivities", new object[] {
                        reservationNo,
                        activityReservations}, this.UploadReservationActivitiesOperationCompleted, userState);
        }
        
        private void OnUploadReservationActivitiesOperationCompleted(object arg) {
            if ((this.UploadReservationActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadReservationActivitiesCompleted(this, new UploadReservationActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Activity:UploadResourceActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", ResponseElementName="UploadResourceActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Activity", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UploadResourceActivities(string location, string resourceNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, ref ActivityUploadReservations activityReservations) {
            object[] results = this.Invoke("UploadResourceActivities", new object[] {
                        location,
                        resourceNo,
                        fromDate,
                        toDate,
                        activityReservations});
            activityReservations = ((ActivityUploadReservations)(results[0]));
        }
        
        /// <remarks/>
        public void UploadResourceActivitiesAsync(string location, string resourceNo, System.DateTime fromDate, System.DateTime toDate, ActivityUploadReservations activityReservations) {
            this.UploadResourceActivitiesAsync(location, resourceNo, fromDate, toDate, activityReservations, null);
        }
        
        /// <remarks/>
        public void UploadResourceActivitiesAsync(string location, string resourceNo, System.DateTime fromDate, System.DateTime toDate, ActivityUploadReservations activityReservations, object userState) {
            if ((this.UploadResourceActivitiesOperationCompleted == null)) {
                this.UploadResourceActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadResourceActivitiesOperationCompleted);
            }
            this.InvokeAsync("UploadResourceActivities", new object[] {
                        location,
                        resourceNo,
                        fromDate,
                        toDate,
                        activityReservations}, this.UploadResourceActivitiesOperationCompleted, userState);
        }
        
        private void OnUploadResourceActivitiesOperationCompleted(object arg) {
            if ((this.UploadResourceActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadResourceActivitiesCompleted(this, new UploadResourceActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityResHeadersXML")]
    public partial class ActivityUploadResHeaders {
        
        private Reservations[] reservationsField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Reservations")]
        public Reservations[] Reservations {
            get {
                return this.reservationsField;
            }
            set {
                this.reservationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityResHeadersXML")]
    public partial class Reservations {
        
        private string reservationNoField;
        
        private string reservationTypeField;
        
        private string clientNoField;
        
        private string clientNameField;
        
        private string descriptionField;
        
        private System.DateTime fromDateField;
        
        private System.DateTime toDateField;
        
        private int noPersonsField;
        
        private decimal totalActivitiesAmountField;
        
        private decimal totalAdditionalAmountField;
        
        private string statusField;
        
        private string internalStatusField;
        
        private string paymentStatusField;
        
        private string locationField;
        
        private string internalContactField;
        
        private string customerAccountField;
        
        private string[] balanceField;
        
        private string commentField;
        
        private string emailField;
        
        private System.DateTime timeFromField;
        
        private System.DateTime timeToField;
        
        private string referenceField;
        
        private string mobileField;
        
        private string languageField;
        
        private string groupNoField;
        
        private decimal pOSsalesField;
        
        private decimal depositsBalanceField;
        
        public Reservations() {
            this.fromDateField = new System.DateTime(0);
            this.toDateField = new System.DateTime(0);
            this.noPersonsField = 0;
            this.totalActivitiesAmountField = ((decimal)(0m));
            this.totalAdditionalAmountField = ((decimal)(0m));
            this.timeFromField = new System.DateTime(0);
            this.timeToField = new System.DateTime(0);
            this.pOSsalesField = ((decimal)(0m));
            this.depositsBalanceField = ((decimal)(0m));
        }
        
        /// <remarks/>
        public string ReservationNo {
            get {
                return this.reservationNoField;
            }
            set {
                this.reservationNoField = value;
            }
        }
        
        /// <remarks/>
        public string ReservationType {
            get {
                return this.reservationTypeField;
            }
            set {
                this.reservationTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ClientNo {
            get {
                return this.clientNoField;
            }
            set {
                this.clientNoField = value;
            }
        }
        
        /// <remarks/>
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime FromDate {
            get {
                return this.fromDateField;
            }
            set {
                this.fromDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int NoPersons {
            get {
                return this.noPersonsField;
            }
            set {
                this.noPersonsField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(decimal), "0")]
        public decimal TotalActivitiesAmount {
            get {
                return this.totalActivitiesAmountField;
            }
            set {
                this.totalActivitiesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(decimal), "0")]
        public decimal TotalAdditionalAmount {
            get {
                return this.totalAdditionalAmountField;
            }
            set {
                this.totalAdditionalAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string InternalStatus {
            get {
                return this.internalStatusField;
            }
            set {
                this.internalStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentStatus {
            get {
                return this.paymentStatusField;
            }
            set {
                this.paymentStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string InternalContact {
            get {
                return this.internalContactField;
            }
            set {
                this.internalContactField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerAccount {
            get {
                return this.customerAccountField;
            }
            set {
                this.customerAccountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Balance")]
        public string[] Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime TimeFrom {
            get {
                return this.timeFromField;
            }
            set {
                this.timeFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime TimeTo {
            get {
                return this.timeToField;
            }
            set {
                this.timeToField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string GroupNo {
            get {
                return this.groupNoField;
            }
            set {
                this.groupNoField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(decimal), "0")]
        public decimal POSsales {
            get {
                return this.pOSsalesField;
            }
            set {
                this.pOSsalesField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(decimal), "0")]
        public decimal DepositsBalance {
            get {
                return this.depositsBalanceField;
            }
            set {
                this.depositsBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityIssuedAllowanceXML")]
    public partial class IssuedAllowance {
        
        private string allowanceNoField;
        
        private string productNoField;
        
        private string validLocationField;
        
        private string descriptionField;
        
        private decimal qtyIssuedField;
        
        private System.DateTime dateIssuedField;
        
        private decimal unitPriceField;
        
        private string clientNoField;
        
        private string clientNameField;
        
        private System.DateTime expiryDateField;
        
        private decimal quantityConsumedField;
        
        private decimal issuedTotalAmountField;
        
        public IssuedAllowance() {
            this.qtyIssuedField = ((decimal)(0m));
            this.dateIssuedField = new System.DateTime(0);
            this.unitPriceField = ((decimal)(0m));
            this.expiryDateField = new System.DateTime(0);
            this.quantityConsumedField = ((decimal)(0m));
            this.issuedTotalAmountField = ((decimal)(0m));
        }
        
        /// <remarks/>
        public string AllowanceNo {
            get {
                return this.allowanceNoField;
            }
            set {
                this.allowanceNoField = value;
            }
        }
        
        /// <remarks/>
        public string ProductNo {
            get {
                return this.productNoField;
            }
            set {
                this.productNoField = value;
            }
        }
        
        /// <remarks/>
        public string ValidLocation {
            get {
                return this.validLocationField;
            }
            set {
                this.validLocationField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal QtyIssued {
            get {
                return this.qtyIssuedField;
            }
            set {
                this.qtyIssuedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateIssued {
            get {
                return this.dateIssuedField;
            }
            set {
                this.dateIssuedField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public string ClientNo {
            get {
                return this.clientNoField;
            }
            set {
                this.clientNoField = value;
            }
        }
        
        /// <remarks/>
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal QuantityConsumed {
            get {
                return this.quantityConsumedField;
            }
            set {
                this.quantityConsumedField = value;
            }
        }
        
        /// <remarks/>
        public decimal IssuedTotalAmount {
            get {
                return this.issuedTotalAmountField;
            }
            set {
                this.issuedTotalAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityIssuedAllowanceXML")]
    public partial class ActivityUploadAllowance {
        
        private IssuedAllowance[] issuedAllowanceField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IssuedAllowance")]
        public IssuedAllowance[] IssuedAllowance {
            get {
                return this.issuedAllowanceField;
            }
            set {
                this.issuedAllowanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityPromotionsXML")]
    public partial class ActivityPromotions {
        
        private string productNoField;
        
        private System.DateTime dateFromField;
        
        private System.DateTime dateToField;
        
        private System.DateTime timeFromField;
        
        private System.DateTime timeToField;
        
        private string clubMembersOnlyField;
        
        private string isPriceorDiscountField;
        
        private decimal priceOrDiscountValueField;
        
        private string daySettingField;
        
        private string priceDescriptionField;
        
        private string locationField;
        
        private string productNameField;
        
        private string[] priceCurrencyField;
        
        public ActivityPromotions() {
            this.dateFromField = new System.DateTime(0);
            this.dateToField = new System.DateTime(0);
            this.timeFromField = new System.DateTime(0);
            this.timeToField = new System.DateTime(0);
            this.priceOrDiscountValueField = ((decimal)(0m));
        }
        
        /// <remarks/>
        public string ProductNo {
            get {
                return this.productNoField;
            }
            set {
                this.productNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime TimeFrom {
            get {
                return this.timeFromField;
            }
            set {
                this.timeFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime TimeTo {
            get {
                return this.timeToField;
            }
            set {
                this.timeToField = value;
            }
        }
        
        /// <remarks/>
        public string ClubMembersOnly {
            get {
                return this.clubMembersOnlyField;
            }
            set {
                this.clubMembersOnlyField = value;
            }
        }
        
        /// <remarks/>
        public string IsPriceorDiscount {
            get {
                return this.isPriceorDiscountField;
            }
            set {
                this.isPriceorDiscountField = value;
            }
        }
        
        /// <remarks/>
        public decimal PriceOrDiscountValue {
            get {
                return this.priceOrDiscountValueField;
            }
            set {
                this.priceOrDiscountValueField = value;
            }
        }
        
        /// <remarks/>
        public string DaySetting {
            get {
                return this.daySettingField;
            }
            set {
                this.daySettingField = value;
            }
        }
        
        /// <remarks/>
        public string PriceDescription {
            get {
                return this.priceDescriptionField;
            }
            set {
                this.priceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PriceCurrency")]
        public string[] PriceCurrency {
            get {
                return this.priceCurrencyField;
            }
            set {
                this.priceCurrencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityPromotionsXML")]
    public partial class ActivityUploadPromotions {
        
        private ActivityPromotions[] activityPromotionsField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ActivityPromotions")]
        public ActivityPromotions[] ActivityPromotions {
            get {
                return this.activityPromotionsField;
            }
            set {
                this.activityPromotionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivitySubscriptionEntriesXML")]
    public partial class MembershipBatchLines {
        
        private string memberNoField;
        
        private decimal priceField;
        
        private decimal discountField;
        
        private decimal qtyField;
        
        private decimal amountField;
        
        private string productTypeField;
        
        private string productNoField;
        
        private string descriptionField;
        
        private string commentField;
        
        private string invoiceNoField;
        
        private string membershipNoField;
        
        private System.DateTime postingDateField;
        
        private decimal additionalChargesField;
        
        private string membershipTypeField;
        
        private System.DateTime periodFromField;
        
        private System.DateTime periodToField;
        
        public MembershipBatchLines() {
            this.priceField = ((decimal)(0m));
            this.discountField = ((decimal)(0m));
            this.qtyField = ((decimal)(0m));
            this.amountField = ((decimal)(0m));
            this.postingDateField = new System.DateTime(0);
            this.additionalChargesField = ((decimal)(0m));
            this.periodFromField = new System.DateTime(0);
            this.periodToField = new System.DateTime(0);
        }
        
        /// <remarks/>
        public string MemberNo {
            get {
                return this.memberNoField;
            }
            set {
                this.memberNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public decimal Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string ProductType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductNo {
            get {
                return this.productNoField;
            }
            set {
                this.productNoField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceNo {
            get {
                return this.invoiceNoField;
            }
            set {
                this.invoiceNoField = value;
            }
        }
        
        /// <remarks/>
        public string MembershipNo {
            get {
                return this.membershipNoField;
            }
            set {
                this.membershipNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime PostingDate {
            get {
                return this.postingDateField;
            }
            set {
                this.postingDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal AdditionalCharges {
            get {
                return this.additionalChargesField;
            }
            set {
                this.additionalChargesField = value;
            }
        }
        
        /// <remarks/>
        public string MembershipType {
            get {
                return this.membershipTypeField;
            }
            set {
                this.membershipTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime PeriodFrom {
            get {
                return this.periodFromField;
            }
            set {
                this.periodFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime PeriodTo {
            get {
                return this.periodToField;
            }
            set {
                this.periodToField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivitySubscriptionEntriesXML")]
    public partial class ActivitySubscriptionEntries {
        
        private MembershipBatchLines[] membershipBatchLinesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MembershipBatchLines")]
        public MembershipBatchLines[] MembershipBatchLines {
            get {
                return this.membershipBatchLinesField;
            }
            set {
                this.membershipBatchLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/MembershipsUploadProductsXML")]
    public partial class MembershipTypes {
        
        private string codeField;
        
        private string descriptionField;
        
        private string chargeTypeField;
        
        private string accessTypeField;
        
        private string statusField;
        
        private string expirationCalculationField;
        
        private string commitmentPeriodField;
        
        private int noOfTimesField;
        
        private string retailItemField;
        
        private decimal priceField;
        
        private int minAgeField;
        
        private System.DateTime fixedEndDateField;
        
        private string requiresMemberShipField;
        
        private string sellingOptionField;
        
        private int maxAgeField;
        
        private string entryTypeField;
        
        private string subscriptionTypeField;
        
        private string memberClubField;
        
        private string pricingUpdateField;
        
        private System.DateTime fixedIssueDateField;
        
        private string priceCommitmentPeriodField;
        
        public MembershipTypes() {
            this.noOfTimesField = 0;
            this.priceField = ((decimal)(0m));
            this.minAgeField = 0;
            this.fixedEndDateField = new System.DateTime(0);
            this.maxAgeField = 0;
            this.fixedIssueDateField = new System.DateTime(0);
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ChargeType {
            get {
                return this.chargeTypeField;
            }
            set {
                this.chargeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AccessType {
            get {
                return this.accessTypeField;
            }
            set {
                this.accessTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ExpirationCalculation {
            get {
                return this.expirationCalculationField;
            }
            set {
                this.expirationCalculationField = value;
            }
        }
        
        /// <remarks/>
        public string CommitmentPeriod {
            get {
                return this.commitmentPeriodField;
            }
            set {
                this.commitmentPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int NoOfTimes {
            get {
                return this.noOfTimesField;
            }
            set {
                this.noOfTimesField = value;
            }
        }
        
        /// <remarks/>
        public string RetailItem {
            get {
                return this.retailItemField;
            }
            set {
                this.retailItemField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int MinAge {
            get {
                return this.minAgeField;
            }
            set {
                this.minAgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime FixedEndDate {
            get {
                return this.fixedEndDateField;
            }
            set {
                this.fixedEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string RequiresMemberShip {
            get {
                return this.requiresMemberShipField;
            }
            set {
                this.requiresMemberShipField = value;
            }
        }
        
        /// <remarks/>
        public string SellingOption {
            get {
                return this.sellingOptionField;
            }
            set {
                this.sellingOptionField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int MaxAge {
            get {
                return this.maxAgeField;
            }
            set {
                this.maxAgeField = value;
            }
        }
        
        /// <remarks/>
        public string EntryType {
            get {
                return this.entryTypeField;
            }
            set {
                this.entryTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SubscriptionType {
            get {
                return this.subscriptionTypeField;
            }
            set {
                this.subscriptionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MemberClub {
            get {
                return this.memberClubField;
            }
            set {
                this.memberClubField = value;
            }
        }
        
        /// <remarks/>
        public string PricingUpdate {
            get {
                return this.pricingUpdateField;
            }
            set {
                this.pricingUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime FixedIssueDate {
            get {
                return this.fixedIssueDateField;
            }
            set {
                this.fixedIssueDateField = value;
            }
        }
        
        /// <remarks/>
        public string PriceCommitmentPeriod {
            get {
                return this.priceCommitmentPeriodField;
            }
            set {
                this.priceCommitmentPeriodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/MembershipsUploadProductsXML")]
    public partial class ActivityMembershipProducts {
        
        private MembershipTypes[] membershipTypesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MembershipTypes")]
        public MembershipTypes[] MembershipTypes {
            get {
                return this.membershipTypesField;
            }
            set {
                this.membershipTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadMembershipsXML")]
    public partial class MembershipEntries {
        
        private string membershipNoField;
        
        private string memberNoField;
        
        private string memberNameField;
        
        private string membershipTypeField;
        
        private string membershipDescriptionField;
        
        private System.DateTime dateIssuedField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateExpiresField;
        
        private System.DateTime dateLastProcessedField;
        
        private string lastProcessBatchField;
        
        private string statusField;
        
        private decimal unitPriceField;
        
        private decimal discountField;
        
        private decimal amountField;
        
        private System.DateTime commitmentDateField;
        
        private string discountReasonCodeField;
        
        private string accessIDField;
        
        private string salesPersonCodeField;
        
        private string entryTypeField;
        
        private int noofVisitsField;
        
        private System.DateTime onHoldUntilField;
        
        private System.DateTime statusDateField;
        
        private string chargeToField;
        
        private string chargeToNameField;
        
        private System.DateTime accessUntilField;
        
        private string statusCodeField;
        
        private System.DateTime priceCommitmentExpiresField;
        
        private string paymentMethodCodeField;
        
        private System.DateTime accessFromField;
        
        public MembershipEntries() {
            this.dateIssuedField = new System.DateTime(0);
            this.dateCreatedField = new System.DateTime(0);
            this.dateExpiresField = new System.DateTime(0);
            this.dateLastProcessedField = new System.DateTime(0);
            this.unitPriceField = ((decimal)(0m));
            this.discountField = ((decimal)(0m));
            this.amountField = ((decimal)(0m));
            this.commitmentDateField = new System.DateTime(0);
            this.noofVisitsField = 0;
            this.onHoldUntilField = new System.DateTime(0);
            this.statusDateField = new System.DateTime(0);
            this.accessUntilField = new System.DateTime(0);
            this.priceCommitmentExpiresField = new System.DateTime(0);
            this.accessFromField = new System.DateTime(0);
        }
        
        /// <remarks/>
        public string MembershipNo {
            get {
                return this.membershipNoField;
            }
            set {
                this.membershipNoField = value;
            }
        }
        
        /// <remarks/>
        public string MemberNo {
            get {
                return this.memberNoField;
            }
            set {
                this.memberNoField = value;
            }
        }
        
        /// <remarks/>
        public string MemberName {
            get {
                return this.memberNameField;
            }
            set {
                this.memberNameField = value;
            }
        }
        
        /// <remarks/>
        public string MembershipType {
            get {
                return this.membershipTypeField;
            }
            set {
                this.membershipTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MembershipDescription {
            get {
                return this.membershipDescriptionField;
            }
            set {
                this.membershipDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateIssued {
            get {
                return this.dateIssuedField;
            }
            set {
                this.dateIssuedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateExpires {
            get {
                return this.dateExpiresField;
            }
            set {
                this.dateExpiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateLastProcessed {
            get {
                return this.dateLastProcessedField;
            }
            set {
                this.dateLastProcessedField = value;
            }
        }
        
        /// <remarks/>
        public string LastProcessBatch {
            get {
                return this.lastProcessBatchField;
            }
            set {
                this.lastProcessBatchField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(decimal), "0")]
        public decimal UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(decimal), "0")]
        public decimal Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(decimal), "0")]
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime CommitmentDate {
            get {
                return this.commitmentDateField;
            }
            set {
                this.commitmentDateField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountReasonCode {
            get {
                return this.discountReasonCodeField;
            }
            set {
                this.discountReasonCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AccessID {
            get {
                return this.accessIDField;
            }
            set {
                this.accessIDField = value;
            }
        }
        
        /// <remarks/>
        public string SalesPersonCode {
            get {
                return this.salesPersonCodeField;
            }
            set {
                this.salesPersonCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EntryType {
            get {
                return this.entryTypeField;
            }
            set {
                this.entryTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int NoofVisits {
            get {
                return this.noofVisitsField;
            }
            set {
                this.noofVisitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime OnHoldUntil {
            get {
                return this.onHoldUntilField;
            }
            set {
                this.onHoldUntilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime StatusDate {
            get {
                return this.statusDateField;
            }
            set {
                this.statusDateField = value;
            }
        }
        
        /// <remarks/>
        public string ChargeTo {
            get {
                return this.chargeToField;
            }
            set {
                this.chargeToField = value;
            }
        }
        
        /// <remarks/>
        public string ChargeToName {
            get {
                return this.chargeToNameField;
            }
            set {
                this.chargeToNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime AccessUntil {
            get {
                return this.accessUntilField;
            }
            set {
                this.accessUntilField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime PriceCommitmentExpires {
            get {
                return this.priceCommitmentExpiresField;
            }
            set {
                this.priceCommitmentExpiresField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentMethodCode {
            get {
                return this.paymentMethodCodeField;
            }
            set {
                this.paymentMethodCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime AccessFrom {
            get {
                return this.accessFromField;
            }
            set {
                this.accessFromField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadMembershipsXML")]
    public partial class ActivityUploadMemberships {
        
        private MembershipEntries[] membershipEntriesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MembershipEntries")]
        public MembershipEntries[] MembershipEntries {
            get {
                return this.membershipEntriesField;
            }
            set {
                this.membershipEntriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityMemberDetailsXML")]
    public partial class MemberContact {
        
        private string memberNoField;
        
        private string clubCodeField;
        
        private string nameField;
        
        private string name2Field;
        
        private string addressField;
        
        private string address2Field;
        
        private string cityField;
        
        private string postCodeField;
        
        private string emailField;
        
        private string mobileField;
        
        private string phoneField;
        
        private string countryField;
        
        private string genderField;
        
        private System.DateTime dateofBirthField;
        
        private string[] accountBalanceField;
        
        public MemberContact() {
            this.dateofBirthField = new System.DateTime(0);
        }
        
        /// <remarks/>
        public string MemberNo {
            get {
                return this.memberNoField;
            }
            set {
                this.memberNoField = value;
            }
        }
        
        /// <remarks/>
        public string ClubCode {
            get {
                return this.clubCodeField;
            }
            set {
                this.clubCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Name2 {
            get {
                return this.name2Field;
            }
            set {
                this.name2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string PostCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateofBirth {
            get {
                return this.dateofBirthField;
            }
            set {
                this.dateofBirthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccountBalance")]
        public string[] AccountBalance {
            get {
                return this.accountBalanceField;
            }
            set {
                this.accountBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityMemberDetailsXML")]
    public partial class ActivityMemberDetails {
        
        private MemberContact[] memberContactField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MemberContact")]
        public MemberContact[] MemberContact {
            get {
                return this.memberContactField;
            }
            set {
                this.memberContactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/MembershipCustomersEntriesXML")]
    public partial class CustomerEntries {
        
        private int entryNoField;
        
        private string customerNoField;
        
        private System.DateTime postingDateField;
        
        private string documentTypeField;
        
        private string documentNoField;
        
        private string descriptionField;
        
        private string currencyField;
        
        private decimal amountField;
        
        private decimal amountLCYField;
        
        private string externalRefField;
        
        private string memberNoField;
        
        public CustomerEntries() {
            this.entryNoField = 0;
            this.postingDateField = new System.DateTime(0);
            this.amountField = ((decimal)(0m));
            this.amountLCYField = ((decimal)(0m));
        }
        
        /// <remarks/>
        public int EntryNo {
            get {
                return this.entryNoField;
            }
            set {
                this.entryNoField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerNo {
            get {
                return this.customerNoField;
            }
            set {
                this.customerNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime PostingDate {
            get {
                return this.postingDateField;
            }
            set {
                this.postingDateField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentType {
            get {
                return this.documentTypeField;
            }
            set {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentNo {
            get {
                return this.documentNoField;
            }
            set {
                this.documentNoField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal AmountLCY {
            get {
                return this.amountLCYField;
            }
            set {
                this.amountLCYField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalRef {
            get {
                return this.externalRefField;
            }
            set {
                this.externalRefField = value;
            }
        }
        
        /// <remarks/>
        public string MemberNo {
            get {
                return this.memberNoField;
            }
            set {
                this.memberNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/MembershipCustomersEntriesXML")]
    public partial class ActivityCustomerEntries {
        
        private CustomerEntries[] customerEntriesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CustomerEntries")]
        public CustomerEntries[] CustomerEntries {
            get {
                return this.customerEntriesField;
            }
            set {
                this.customerEntriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityReservationsXML")]
    public partial class Activities {
        
        private string activityNoField;
        
        private string productNoField;
        
        private string descriptionField;
        
        private System.DateTime dateFromField;
        
        private System.DateTime dateToField;
        
        private System.DateTime timeFromField;
        
        private System.DateTime timeToField;
        
        private decimal quantityField;
        
        private decimal unitPriceField;
        
        private decimal lineDiscountPercentageField;
        
        private decimal totalAmountField;
        
        private string statusField;
        
        private string paymentStatusField;
        
        private string locationField;
        
        private string clientNoField;
        
        private string clientNameField;
        
        private int noOfPersonsField;
        
        private decimal lineDiscountAmountField;
        
        private string commentField;
        
        private string allowanceNoField;
        
        private string[] priceCurrencyField;
        
        private string cancelPolicyField;
        
        private string[] cancelPolicyDescriptionField;
        
        private decimal cancelAmountField;
        
        public Activities() {
            this.dateFromField = new System.DateTime(0);
            this.dateToField = new System.DateTime(0);
            this.timeFromField = new System.DateTime(0);
            this.timeToField = new System.DateTime(0);
            this.quantityField = ((decimal)(0m));
            this.unitPriceField = ((decimal)(0m));
            this.lineDiscountPercentageField = ((decimal)(0m));
            this.totalAmountField = ((decimal)(0m));
            this.noOfPersonsField = 0;
            this.lineDiscountAmountField = ((decimal)(0m));
            this.cancelAmountField = ((decimal)(0m));
        }
        
        /// <remarks/>
        public string ActivityNo {
            get {
                return this.activityNoField;
            }
            set {
                this.activityNoField = value;
            }
        }
        
        /// <remarks/>
        public string ProductNo {
            get {
                return this.productNoField;
            }
            set {
                this.productNoField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        public System.DateTime TimeFrom {
            get {
                return this.timeFromField;
            }
            set {
                this.timeFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        public System.DateTime TimeTo {
            get {
                return this.timeToField;
            }
            set {
                this.timeToField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal LineDiscountPercentage {
            get {
                return this.lineDiscountPercentageField;
            }
            set {
                this.lineDiscountPercentageField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                this.totalAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentStatus {
            get {
                return this.paymentStatusField;
            }
            set {
                this.paymentStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string ClientNo {
            get {
                return this.clientNoField;
            }
            set {
                this.clientNoField = value;
            }
        }
        
        /// <remarks/>
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        public int NoOfPersons {
            get {
                return this.noOfPersonsField;
            }
            set {
                this.noOfPersonsField = value;
            }
        }
        
        /// <remarks/>
        public decimal LineDiscountAmount {
            get {
                return this.lineDiscountAmountField;
            }
            set {
                this.lineDiscountAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string AllowanceNo {
            get {
                return this.allowanceNoField;
            }
            set {
                this.allowanceNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PriceCurrency")]
        public string[] PriceCurrency {
            get {
                return this.priceCurrencyField;
            }
            set {
                this.priceCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string CancelPolicy {
            get {
                return this.cancelPolicyField;
            }
            set {
                this.cancelPolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CancelPolicyDescription")]
        public string[] CancelPolicyDescription {
            get {
                return this.cancelPolicyDescriptionField;
            }
            set {
                this.cancelPolicyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal CancelAmount {
            get {
                return this.cancelAmountField;
            }
            set {
                this.cancelAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityReservationsXML")]
    public partial class ActivityUploadReservations {
        
        private Activities[] activitiesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Activities")]
        public Activities[] Activities {
            get {
                return this.activitiesField;
            }
            set {
                this.activitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityAdmissionEntriesXML")]
    public partial class AdmissionEntries {
        
        private string locationNoField;
        
        private string gateNoField;
        
        private string memberNoField;
        
        private int lineNoField;
        
        private System.DateTime dateField;
        
        private System.DateTime timeField;
        
        private string memberTypeField;
        
        private string productNameField;
        
        private string typeField;
        
        private string nameField;
        
        private string membershipNoField;
        
        public AdmissionEntries() {
            this.lineNoField = 0;
            this.dateField = new System.DateTime(0);
            this.timeField = new System.DateTime(0);
        }
        
        /// <remarks/>
        public string LocationNo {
            get {
                return this.locationNoField;
            }
            set {
                this.locationNoField = value;
            }
        }
        
        /// <remarks/>
        public string GateNo {
            get {
                return this.gateNoField;
            }
            set {
                this.gateNoField = value;
            }
        }
        
        /// <remarks/>
        public string MemberNo {
            get {
                return this.memberNoField;
            }
            set {
                this.memberNoField = value;
            }
        }
        
        /// <remarks/>
        public int LineNo {
            get {
                return this.lineNoField;
            }
            set {
                this.lineNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01T00:00:00")]
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public string MemberType {
            get {
                return this.memberTypeField;
            }
            set {
                this.memberTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string MembershipNo {
            get {
                return this.membershipNoField;
            }
            set {
                this.membershipNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityAdmissionEntriesXML")]
    public partial class ActivityAdmissionEntries {
        
        private AdmissionEntries[] admissionEntriesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AdmissionEntries")]
        public AdmissionEntries[] AdmissionEntries {
            get {
                return this.admissionEntriesField;
            }
            set {
                this.admissionEntriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadTypesXML")]
    public partial class ActivityTypes {
        
        private string activityCodeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string ActivityCode {
            get {
                return this.activityCodeField;
            }
            set {
                this.activityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadTypesXML")]
    public partial class ActivityUploadTypes {
        
        private ActivityTypes[] activityTypesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ActivityTypes")]
        public ActivityTypes[] ActivityTypes {
            get {
                return this.activityTypesField;
            }
            set {
                this.activityTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadResourcesXML")]
    public partial class ActivityResources {
        
        private string resourceNoField;
        
        private string descriptionField;
        
        private string resourceGroupField;
        
        private string fixedLocationField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        public string ResourceNo {
            get {
                return this.resourceNoField;
            }
            set {
                this.resourceNoField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ResourceGroup {
            get {
                return this.resourceGroupField;
            }
            set {
                this.resourceGroupField = value;
            }
        }
        
        /// <remarks/>
        public string FixedLocation {
            get {
                return this.fixedLocationField;
            }
            set {
                this.fixedLocationField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadResourcesXML")]
    public partial class ActivityUploadResources {
        
        private ActivityResources[] activityResourcesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ActivityResources")]
        public ActivityResources[] ActivityResources {
            get {
                return this.activityResourcesField;
            }
            set {
                this.activityResourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadProductsXML")]
    public partial class ActivityProducts {
        
        private string productNoField;
        
        private string descriptionField;
        
        private string activityTypeField;
        
        private string retailItemField;
        
        private decimal defaultQtyField;
        
        private string pricedPerPersonField;
        
        private bool allowQuantityChangeField;
        
        private string[] quantityCaptionField;
        
        private bool allowNoOfPersonChangeField;
        
        private int minQtyField;
        
        private int maxQtyField;
        
        private int minPersonsField;
        
        private int maxPersonsField;
        
        private string[] paymentRequiredField;
        
        private decimal defaultUnitPriceField;
        
        private string[] priceCurrencyField;
        
        private string cancelPolicyField;
        
        private string[] cancelPolicyDescriptionField;
        
        private string productTypeField;
        
        private string fixedLocationField;
        
        public ActivityProducts() {
            this.defaultQtyField = ((decimal)(0m));
            this.allowQuantityChangeField = false;
            this.allowNoOfPersonChangeField = false;
            this.minQtyField = 0;
            this.maxQtyField = 0;
            this.minPersonsField = 0;
            this.maxPersonsField = 0;
            this.defaultUnitPriceField = ((decimal)(0m));
        }
        
        /// <remarks/>
        public string ProductNo {
            get {
                return this.productNoField;
            }
            set {
                this.productNoField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityType {
            get {
                return this.activityTypeField;
            }
            set {
                this.activityTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RetailItem {
            get {
                return this.retailItemField;
            }
            set {
                this.retailItemField = value;
            }
        }
        
        /// <remarks/>
        public decimal DefaultQty {
            get {
                return this.defaultQtyField;
            }
            set {
                this.defaultQtyField = value;
            }
        }
        
        /// <remarks/>
        public string PricedPerPerson {
            get {
                return this.pricedPerPersonField;
            }
            set {
                this.pricedPerPersonField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowQuantityChange {
            get {
                return this.allowQuantityChangeField;
            }
            set {
                this.allowQuantityChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("QuantityCaption")]
        public string[] QuantityCaption {
            get {
                return this.quantityCaptionField;
            }
            set {
                this.quantityCaptionField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowNoOfPersonChange {
            get {
                return this.allowNoOfPersonChangeField;
            }
            set {
                this.allowNoOfPersonChangeField = value;
            }
        }
        
        /// <remarks/>
        public int MinQty {
            get {
                return this.minQtyField;
            }
            set {
                this.minQtyField = value;
            }
        }
        
        /// <remarks/>
        public int MaxQty {
            get {
                return this.maxQtyField;
            }
            set {
                this.maxQtyField = value;
            }
        }
        
        /// <remarks/>
        public int MinPersons {
            get {
                return this.minPersonsField;
            }
            set {
                this.minPersonsField = value;
            }
        }
        
        /// <remarks/>
        public int MaxPersons {
            get {
                return this.maxPersonsField;
            }
            set {
                this.maxPersonsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PaymentRequired")]
        public string[] PaymentRequired {
            get {
                return this.paymentRequiredField;
            }
            set {
                this.paymentRequiredField = value;
            }
        }
        
        /// <remarks/>
        public decimal DefaultUnitPrice {
            get {
                return this.defaultUnitPriceField;
            }
            set {
                this.defaultUnitPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PriceCurrency")]
        public string[] PriceCurrency {
            get {
                return this.priceCurrencyField;
            }
            set {
                this.priceCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string CancelPolicy {
            get {
                return this.cancelPolicyField;
            }
            set {
                this.cancelPolicyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CancelPolicyDescription")]
        public string[] CancelPolicyDescription {
            get {
                return this.cancelPolicyDescriptionField;
            }
            set {
                this.cancelPolicyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ProductType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FixedLocation {
            get {
                return this.fixedLocationField;
            }
            set {
                this.fixedLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadProductsXML")]
    public partial class ActivityUploadProducts {
        
        private ActivityProducts[] activityProductsField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ActivityProducts")]
        public ActivityProducts[] ActivityProducts {
            get {
                return this.activityProductsField;
            }
            set {
                this.activityProductsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadLocationsXML")]
    public partial class ActivityLocations {
        
        private string codeField;
        
        private string descriptionField;
        
        private string retailStoreField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string RetailStore {
            get {
                return this.retailStoreField;
            }
            set {
                this.retailStoreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityUploadLocationsXML")]
    public partial class ActivityUploadLocations {
        
        private ActivityLocations[] activityLocationsField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ActivityLocations")]
        public ActivityLocations[] ActivityLocations {
            get {
                return this.activityLocationsField;
            }
            set {
                this.activityLocationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityAvailabilityResponseXML")]
    public partial class AvailabilityWork {
        
        private string productNoField;
        
        private System.DateTime availDateField;
        
        private string weekDayField;
        
        private System.DateTime availTimeField;
        
        private int availabilityField;
        
        private string timeCaptionField;
        
        private string locationField;
        
        private decimal priceField;
        
        private string optionalResourceNoField;
        
        private string[] optionalResourceNameField;
        
        private string[] priceCurrencyField;
        
        private string commentField;
        
        public AvailabilityWork() {
            this.availDateField = new System.DateTime(0);
            this.availTimeField = new System.DateTime(0);
            this.availabilityField = 0;
            this.priceField = ((decimal)(0m));
        }
        
        /// <remarks/>
        public string ProductNo {
            get {
                return this.productNoField;
            }
            set {
                this.productNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.DateTime), "0001-01-01")]
        public System.DateTime AvailDate {
            get {
                return this.availDateField;
            }
            set {
                this.availDateField = value;
            }
        }
        
        /// <remarks/>
        public string WeekDay {
            get {
                return this.weekDayField;
            }
            set {
                this.weekDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
        public System.DateTime AvailTime {
            get {
                return this.availTimeField;
            }
            set {
                this.availTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Availability {
            get {
                return this.availabilityField;
            }
            set {
                this.availabilityField = value;
            }
        }
        
        /// <remarks/>
        public string TimeCaption {
            get {
                return this.timeCaptionField;
            }
            set {
                this.timeCaptionField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string OptionalResourceNo {
            get {
                return this.optionalResourceNoField;
            }
            set {
                this.optionalResourceNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OptionalResourceName")]
        public string[] OptionalResourceName {
            get {
                return this.optionalResourceNameField;
            }
            set {
                this.optionalResourceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PriceCurrency")]
        public string[] PriceCurrency {
            get {
                return this.priceCurrencyField;
            }
            set {
                this.priceCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityAvailabilityResponseXML")]
    public partial class ActivityAvailabilityResponse {
        
        private AvailabilityWork[] availabilityWorkField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AvailabilityWork")]
        public AvailabilityWork[] AvailabilityWork {
            get {
                return this.availabilityWorkField;
            }
            set {
                this.availabilityWorkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityAttributeRespondXML")]
    public partial class AttributeLines {
        
        private string linkFieldField;
        
        private string attributeCodeField;
        
        private string attributeValueField;
        
        private int sequenceField;
        
        private string attributeValueTypeField;
        
        public AttributeLines() {
            this.sequenceField = 0;
        }
        
        /// <remarks/>
        public string LinkField {
            get {
                return this.linkFieldField;
            }
            set {
                this.linkFieldField = value;
            }
        }
        
        /// <remarks/>
        public string AttributeCode {
            get {
                return this.attributeCodeField;
            }
            set {
                this.attributeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AttributeValue {
            get {
                return this.attributeValueField;
            }
            set {
                this.attributeValueField = value;
            }
        }
        
        /// <remarks/>
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string AttributeValueType {
            get {
                return this.attributeValueTypeField;
            }
            set {
                this.attributeValueTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityAttributeRespondXML")]
    public partial class ActivityAttributeRespond {
        
        private AttributeLines[] attributeLinesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AttributeLines")]
        public AttributeLines[] AttributeLines {
            get {
                return this.attributeLinesField;
            }
            set {
                this.attributeLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityIssuedAllowanceXML")]
    public partial class ChargeLines {
        
        private string[] activityNoField;
        
        private int lineNoField;
        
        private string itemNoField;
        
        private decimal qtyField;
        
        private decimal priceField;
        
        private decimal discountPercentageField;
        
        private decimal totalField;
        
        private string optionalField;
        
        private string uomField;
        
        private string[] invoiceReferenceField;
        
        private string productTypeField;
        
        private string descriptionField;
        
        public ChargeLines() {
            this.lineNoField = 0;
            this.qtyField = ((decimal)(0m));
            this.priceField = ((decimal)(0m));
            this.discountPercentageField = ((decimal)(0m));
            this.totalField = ((decimal)(0m));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ActivityNo")]
        public string[] ActivityNo {
            get {
                return this.activityNoField;
            }
            set {
                this.activityNoField = value;
            }
        }
        
        /// <remarks/>
        public int LineNo {
            get {
                return this.lineNoField;
            }
            set {
                this.lineNoField = value;
            }
        }
        
        /// <remarks/>
        public string ItemNo {
            get {
                return this.itemNoField;
            }
            set {
                this.itemNoField = value;
            }
        }
        
        /// <remarks/>
        public decimal Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public decimal DiscountPercentage {
            get {
                return this.discountPercentageField;
            }
            set {
                this.discountPercentageField = value;
            }
        }
        
        /// <remarks/>
        public decimal Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public string Optional {
            get {
                return this.optionalField;
            }
            set {
                this.optionalField = value;
            }
        }
        
        /// <remarks/>
        public string Uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InvoiceReference")]
        public string[] InvoiceReference {
            get {
                return this.invoiceReferenceField;
            }
            set {
                this.invoiceReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string ProductType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ActivityIssuedAllowanceXML")]
    public partial class ActivityChargeRespond {
        
        private ChargeLines[] chargeLinesField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ChargeLines")]
        public ChargeLines[] ChargeLines {
            get {
                return this.chargeLinesField;
            }
            set {
                this.chargeLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelActivityCompletedEventHandler(object sender, CancelActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnProductNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal returnUnitPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnQty {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnLineDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public decimal returnTotalAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string returnCurrency {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelMembershipCompletedEventHandler(object sender, CancelMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CancelReservationCompletedEventHandler(object sender, CancelReservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckAccessCompletedEventHandler(object sender, CheckAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string messageString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmActivityV2CompletedEventHandler(object sender, ConfirmActivityV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmActivityV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmActivityV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string returnActivityNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal returnUnitPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnLineDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnTotalAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string returnCurrency {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string reservationNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmActivityV3CompletedEventHandler(object sender, ConfirmActivityV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmActivityV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmActivityV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string returnActivityNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal returnUnitPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnLineDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnTotalAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string returnCurrency {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string reservationNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string returnRetailItem {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmActivityV4CompletedEventHandler(object sender, ConfirmActivityV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmActivityV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmActivityV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string returnActivityNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal returnUnitPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnLineDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnTotalAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string returnCurrency {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string reservationNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string returnRetailItem {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmActivityV5CompletedEventHandler(object sender, ConfirmActivityV5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmActivityV5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmActivityV5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string returnActivityNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal returnUnitPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnLineDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnTotalAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string returnCurrency {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string reservationNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string returnRetailItem {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmActivityCompletedEventHandler(object sender, ConfirmActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string returnActivityNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal returnUnitPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnLineDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnTotalAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string returnCurrency {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmGroupActivityV2CompletedEventHandler(object sender, ConfirmGroupActivityV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmGroupActivityV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmGroupActivityV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int returnGroupLineNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnActivityNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnUnitPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnLineDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public decimal returnTotalAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string returnCurrency {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string reservationNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string returnRetailItem {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmGroupActivityCompletedEventHandler(object sender, ConfirmGroupActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmGroupActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmGroupActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int returnGroupLineNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnActivityNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnUnitPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnLineDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public decimal returnTotalAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string returnCurrency {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string reservationNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string returnRetailItem {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ConfirmReservationCompletedEventHandler(object sender, ConfirmReservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteGroupActivityCompletedEventHandler(object sender, DeleteGroupActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGroupActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGroupActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetActReservationsCompletedEventHandler(object sender, GetActReservationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActReservationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActReservationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadResHeaders resHeadersRespond {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadResHeaders)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAdditionalChargesCompletedEventHandler(object sender, GetAdditionalChargesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdditionalChargesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdditionalChargesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityChargeRespond activityChargeRespond {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityChargeRespond)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAttributesCompletedEventHandler(object sender, GetAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityAttributeRespond activityAttributeRespond {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityAttributeRespond)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAvailabilityTokenCompletedEventHandler(object sender, GetAvailabilityTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailabilityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailabilityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string returnTokenNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAvailabilityV2CompletedEventHandler(object sender, GetAvailabilityV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailabilityV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailabilityV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public ActivityAvailabilityResponse getAvailabilityResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityAvailabilityResponse)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAvailabilityV3CompletedEventHandler(object sender, GetAvailabilityV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailabilityV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailabilityV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public ActivityAvailabilityResponse getAvailabilityResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityAvailabilityResponse)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAvailabilityV4CompletedEventHandler(object sender, GetAvailabilityV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailabilityV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailabilityV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public ActivityAvailabilityResponse getAvailabilityResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityAvailabilityResponse)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAvailabilityCompletedEventHandler(object sender, GetAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public ActivityAvailabilityResponse getAvailabilityResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityAvailabilityResponse)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProductChargesV2CompletedEventHandler(object sender, GetProductChargesV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductChargesV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductChargesV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityChargeRespond activityChargeRespond {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityChargeRespond)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProductChargesCompletedEventHandler(object sender, GetProductChargesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductChargesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductChargesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityChargeRespond activityChargeRespond {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityChargeRespond)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetResourceAvailabilityCompletedEventHandler(object sender, GetResourceAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public ActivityAvailabilityResponse getAvailabilityResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityAvailabilityResponse)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetResourceGroupAvailabilityCompletedEventHandler(object sender, GetResourceGroupAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceGroupAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceGroupAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public ActivityAvailabilityResponse getAvailabilityResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityAvailabilityResponse)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertGroupReservationCompletedEventHandler(object sender, InsertGroupReservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGroupReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGroupReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string setReservationNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertMemberDepositCompletedEventHandler(object sender, InsertMemberDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMemberDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMemberDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnItemNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertReservationCompletedEventHandler(object sender, InsertReservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string setReservationNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PreSellActivityProductCompletedEventHandler(object sender, PreSellActivityProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreSellActivityProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreSellActivityProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string returnItemNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public decimal returnUnitPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SellMembershipV2CompletedEventHandler(object sender, SellMembershipV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SellMembershipV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SellMembershipV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string returnMembershipNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnItemNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal returnPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnQty {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string returnBookingRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SellMembershipCompletedEventHandler(object sender, SellMembershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SellMembershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SellMembershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string returnMembershipNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string returnItemNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal returnPrice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public decimal returnQty {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public decimal returnDiscount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetAdditionalChargesV2CompletedEventHandler(object sender, SetAdditionalChargesV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAdditionalChargesV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAdditionalChargesV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetAdditionalChargesCompletedEventHandler(object sender, SetAdditionalChargesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAdditionalChargesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAdditionalChargesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetAttributeCompletedEventHandler(object sender, SetAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int attributeSequence {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateGroupHeaderStatusCompletedEventHandler(object sender, UpdateGroupHeaderStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupHeaderStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupHeaderStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateGroupReservationCompletedEventHandler(object sender, UpdateGroupReservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateReservationCompletedEventHandler(object sender, UpdateReservationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReservationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReservationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadActivityLocationsCompletedEventHandler(object sender, UploadActivityLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadActivityLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadActivityLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadLocations uploadLocations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadLocations)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadActivityProductsCompletedEventHandler(object sender, UploadActivityProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadActivityProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadActivityProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadProducts uploadProducts {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadProducts)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadActivityResourcesCompletedEventHandler(object sender, UploadActivityResourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadActivityResourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadActivityResourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadResources uploadResources {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadResources)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadActivityTypesCompletedEventHandler(object sender, UploadActivityTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadActivityTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadActivityTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadTypes uploadTypes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadTypes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadAdmissionEntriesCompletedEventHandler(object sender, UploadAdmissionEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAdmissionEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAdmissionEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityAdmissionEntries activityAdmissionEntries {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityAdmissionEntries)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadClientBookingsV2CompletedEventHandler(object sender, UploadClientBookingsV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadClientBookingsV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadClientBookingsV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadReservations activityReservations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadReservations)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadClientBookingsCompletedEventHandler(object sender, UploadClientBookingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadClientBookingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadClientBookingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadReservations activityReservations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadReservations)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadCustomerEntriesCompletedEventHandler(object sender, UploadCustomerEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadCustomerEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadCustomerEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityCustomerEntries activityCustomerEntries {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityCustomerEntries)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadMemberDetailsCompletedEventHandler(object sender, UploadMemberDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadMemberDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadMemberDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityMemberDetails activityMemberDetails {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityMemberDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadMembershipEntriesCompletedEventHandler(object sender, UploadMembershipEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadMembershipEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadMembershipEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadMemberships activityUploadMemberships {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadMemberships)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadMembershipProductsCompletedEventHandler(object sender, UploadMembershipProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadMembershipProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadMembershipProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityMembershipProducts uploadProducts {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityMembershipProducts)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadMembershipSubscriptionChargesCompletedEventHandler(object sender, UploadMembershipSubscriptionChargesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadMembershipSubscriptionChargesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadMembershipSubscriptionChargesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivitySubscriptionEntries activitySubscriptionEntries {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivitySubscriptionEntries)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadPromotionsCompletedEventHandler(object sender, UploadPromotionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadPromotionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadPromotionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadPromotions activityPromotions {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadPromotions)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadPurchasedAllowancesCompletedEventHandler(object sender, UploadPurchasedAllowancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadPurchasedAllowancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadPurchasedAllowancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadAllowance activityIssuedAllowance {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadAllowance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadReservationActivitiesCompletedEventHandler(object sender, UploadReservationActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadReservationActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadReservationActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadReservations activityReservations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadReservations)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UploadResourceActivitiesCompletedEventHandler(object sender, UploadResourceActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadResourceActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadResourceActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivityUploadReservations activityReservations {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivityUploadReservations)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591